{
  "matrices": [
    {
      "title": "Verifiable Credentials Data Model v2.0",
      "ctx": null,
      "suites": [
        {
          "title": "apicatalog.com",
          "ctx": null,
          "suites": [],
          "tests": [
            {
              "type": "test",
              "title": "Conforming document (compliance): VCDM \"MUST be enforced.\" (\"all relevant normative statements in Sections 4. Basic Concepts, 5. Advanced Concepts, and 6. Syntaxes\")",
              "body": "",
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": true,
              "file": "/home/runner/work/vc-data-model-2.0-test-suite/vc-data-model-2.0-test-suite/tests/10-vcdm2.js",
              "parent": "TQy32CushC6lFCaq2JeJG",
              "ctx": null,
              "state": "pending"
            },
            {
              "type": "test",
              "title": "A serialization format for the conforming document MUST be deterministic, bi-directional, and lossless as described in Section 6. Syntaxes.",
              "body": "",
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": true,
              "file": "/home/runner/work/vc-data-model-2.0-test-suite/vc-data-model-2.0-test-suite/tests/10-vcdm2.js",
              "parent": "TQy32CushC6lFCaq2JeJG",
              "ctx": null,
              "state": "pending"
            },
            {
              "type": "test",
              "title": "Conforming processors MUST produce errors when non-conforming documents are consumed.",
              "body": "async function() {\n        this.test.cell = {\n          columnId: name,\n          rowId: this.test.title\n        };\n        await fn.apply(this, arguments);\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-data-model-2.0-test-suite/vc-data-model-2.0-test-suite/tests/10-vcdm2.js",
              "parent": "TQy32CushC6lFCaq2JeJG",
              "ctx": null,
              "_testId": "urn:uuid:52203ca6-0f0e-44d0-917c-ae3c1099cb36",
              "_events": {},
              "_eventsCount": 1,
              "cell": {
                "columnId": "apicatalog.com",
                "rowId": "Conforming processors MUST produce errors when non-conforming documents are consumed."
              },
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 333,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 422,
              "state": "passed",
              "speed": "slow"
            },
            {
              "type": "test",
              "title": "Verifiable credentials and verifiable presentations MUST include a @context property.",
              "body": "async function() {\n        this.test.cell = {\n          columnId: name,\n          rowId: this.test.title\n        };\n        await fn.apply(this, arguments);\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-data-model-2.0-test-suite/vc-data-model-2.0-test-suite/tests/10-vcdm2.js",
              "parent": "TQy32CushC6lFCaq2JeJG",
              "ctx": null,
              "_testId": "urn:uuid:ebba5c19-7f8d-4cb8-9d02-a9e20eb40de8",
              "_events": {},
              "_eventsCount": 1,
              "cell": {
                "columnId": "apicatalog.com",
                "rowId": "Verifiable credentials and verifiable presentations MUST include a @context property."
              },
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 755,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 323,
              "state": "passed",
              "speed": "slow"
            },
            {
              "type": "test",
              "title": "Verifiable credentials and verifiable presentations: The value of the @context property MUST be an ordered set where the first item is a URL with the value https://www.w3.org/ns/credentials/v2.",
              "body": "async function() {\n        this.test.cell = {\n          columnId: name,\n          rowId: this.test.title\n        };\n        await fn.apply(this, arguments);\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-data-model-2.0-test-suite/vc-data-model-2.0-test-suite/tests/10-vcdm2.js",
              "parent": "TQy32CushC6lFCaq2JeJG",
              "ctx": null,
              "_testId": "urn:uuid:4bb0b7d2-4e99-4944-903f-01e69b213972",
              "_events": {},
              "_eventsCount": 1,
              "cell": {
                "columnId": "apicatalog.com",
                "rowId": "Verifiable credentials and verifiable presentations: The value of the @context property MUST be an ordered set where the first item is a URL with the value https://www.w3.org/ns/credentials/v2."
              },
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 1078,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 4274,
              "state": "passed",
              "speed": "slow"
            },
            {
              "type": "test",
              "title": "@context: \"Subsequent items in the array MUST express context information and be composed of any combination of URLs or objects.\"",
              "body": "async function() {\n        this.test.cell = {\n          columnId: name,\n          rowId: this.test.title\n        };\n        await fn.apply(this, arguments);\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-data-model-2.0-test-suite/vc-data-model-2.0-test-suite/tests/10-vcdm2.js",
              "parent": "TQy32CushC6lFCaq2JeJG",
              "ctx": null,
              "_testId": "urn:uuid:61f75a9f-c27f-48c2-b6f0-42ab4265dcee",
              "_events": {},
              "_eventsCount": 1,
              "cell": {
                "columnId": "apicatalog.com",
                "rowId": "@context: \"Subsequent items in the array MUST express context information and be composed of any combination of URLs or objects.\""
              },
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 5354,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 721,
              "state": "passed",
              "speed": "slow"
            },
            {
              "type": "test",
              "title": "if present: \"The id property MUST express an identifier that others are expected to use when expressing statements about a specific thing identified by that identifier.\"",
              "body": "async function() {\n        this.test.cell = {\n          columnId: name,\n          rowId: this.test.title\n        };\n        await fn.apply(this, arguments);\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-data-model-2.0-test-suite/vc-data-model-2.0-test-suite/tests/10-vcdm2.js",
              "parent": "TQy32CushC6lFCaq2JeJG",
              "ctx": null,
              "_testId": "urn:uuid:d0934987-69fe-49b2-a889-74b978f477e5",
              "_events": {},
              "_eventsCount": 1,
              "cell": {
                "columnId": "apicatalog.com",
                "rowId": "if present: \"The id property MUST express an identifier that others are expected to use when expressing statements about a specific thing identified by that identifier.\""
              },
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 6076,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 391,
              "state": "passed",
              "speed": "slow"
            },
            {
              "type": "test",
              "title": "if present: \"The id property MUST NOT have more than one value.\"",
              "body": "async function() {\n        this.test.cell = {\n          columnId: name,\n          rowId: this.test.title\n        };\n        await fn.apply(this, arguments);\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-data-model-2.0-test-suite/vc-data-model-2.0-test-suite/tests/10-vcdm2.js",
              "parent": "TQy32CushC6lFCaq2JeJG",
              "ctx": null,
              "_testId": "urn:uuid:ad8e5465-a926-47bd-9d2f-2a47dd54f681",
              "_events": {},
              "_eventsCount": 1,
              "cell": {
                "columnId": "apicatalog.com",
                "rowId": "if present: \"The id property MUST NOT have more than one value.\""
              },
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 6471,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 820,
              "state": "passed",
              "speed": "slow"
            },
            {
              "type": "test",
              "title": "if present: \"The value of the id property MUST be a URL which MAY be dereferenced.\"",
              "body": "async function() {\n        this.test.cell = {\n          columnId: name,\n          rowId: this.test.title\n        };\n        await fn.apply(this, arguments);\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-data-model-2.0-test-suite/vc-data-model-2.0-test-suite/tests/10-vcdm2.js",
              "parent": "TQy32CushC6lFCaq2JeJG",
              "ctx": null,
              "_testId": "urn:uuid:46dad5c2-76f5-480d-8186-3e6f2c871f1e",
              "_events": {},
              "_eventsCount": 1,
              "cell": {
                "columnId": "apicatalog.com",
                "rowId": "if present: \"The value of the id property MUST be a URL which MAY be dereferenced.\""
              },
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 7291,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 480,
              "state": "passed",
              "speed": "slow"
            },
            {
              "type": "test",
              "title": "The value of the id property MUST be a single URL.",
              "body": "async function() {\n        this.test.cell = {\n          columnId: name,\n          rowId: this.test.title\n        };\n        await fn.apply(this, arguments);\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-data-model-2.0-test-suite/vc-data-model-2.0-test-suite/tests/10-vcdm2.js",
              "parent": "TQy32CushC6lFCaq2JeJG",
              "ctx": null,
              "_testId": "urn:uuid:39942da0-0552-40ae-bd65-9eb99e71f38d",
              "_events": {},
              "_eventsCount": 1,
              "cell": {
                "columnId": "apicatalog.com",
                "rowId": "The value of the id property MUST be a single URL."
              },
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 7771,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 102,
              "state": "passed",
              "speed": "slow"
            },
            {
              "type": "test",
              "title": "Verifiable credentials and verifiable presentations MUST have a type property.",
              "body": "async function() {\n        this.test.cell = {\n          columnId: name,\n          rowId: this.test.title\n        };\n        await fn.apply(this, arguments);\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-data-model-2.0-test-suite/vc-data-model-2.0-test-suite/tests/10-vcdm2.js",
              "parent": "TQy32CushC6lFCaq2JeJG",
              "ctx": null,
              "_testId": "urn:uuid:2d4c013b-0674-4a57-ac9c-8e163ecd0ebd",
              "_events": {},
              "_eventsCount": 1,
              "cell": {
                "columnId": "apicatalog.com",
                "rowId": "Verifiable credentials and verifiable presentations MUST have a type property."
              },
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 7875,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 200,
              "state": "passed",
              "speed": "slow"
            },
            {
              "type": "test",
              "title": "The value of the type property MUST be, or map to (through interpretation of the @context property), one or more URLs.",
              "body": "async function() {\n        this.test.cell = {\n          columnId: name,\n          rowId: this.test.title\n        };\n        await fn.apply(this, arguments);\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-data-model-2.0-test-suite/vc-data-model-2.0-test-suite/tests/10-vcdm2.js",
              "parent": "TQy32CushC6lFCaq2JeJG",
              "ctx": null,
              "_testId": "urn:uuid:27a993a5-405a-4dc6-ace5-3ebe3fcabf42",
              "_events": {},
              "_eventsCount": 1,
              "cell": {
                "columnId": "apicatalog.com",
                "rowId": "The value of the type property MUST be, or map to (through interpretation of the @context property), one or more URLs."
              },
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 8075,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 998,
              "state": "failed",
              "err": {
                "generatedMessage": false,
                "code": "ERR_ASSERTION",
                "operator": "rejects"
              }
            },
            {
              "type": "test",
              "title": "type property: \"If more than one URL is provided, the URLs MUST be interpreted as an unordered set.\"",
              "body": "",
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": true,
              "file": "/home/runner/work/vc-data-model-2.0-test-suite/vc-data-model-2.0-test-suite/tests/10-vcdm2.js",
              "parent": "TQy32CushC6lFCaq2JeJG",
              "ctx": null,
              "state": "pending"
            },
            {
              "type": "test",
              "title": "list: \"objects that MUST have a type specified.\"",
              "body": "async function() {\n        this.test.cell = {\n          columnId: name,\n          rowId: this.test.title\n        };\n        await fn.apply(this, arguments);\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-data-model-2.0-test-suite/vc-data-model-2.0-test-suite/tests/10-vcdm2.js",
              "parent": "TQy32CushC6lFCaq2JeJG",
              "ctx": null,
              "_testId": "urn:uuid:5bdbe82d-42db-4e15-8899-fd6c0e9209f1",
              "_events": {},
              "_eventsCount": 1,
              "cell": {
                "columnId": "apicatalog.com",
                "rowId": "list: \"objects that MUST have a type specified.\""
              },
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 9075,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 1347,
              "state": "failed",
              "err": {
                "response": {},
                "request": {},
                "options": {
                  "credentials": "same-origin",
                  "headers": {},
                  "body": "{\"credential\":{\"@context\":[\"https://www.w3.org/ns/credentials/v2\",{\"CredentialStatusList2017\":\"https://example.org/examples#CredentialStatusList2017\"}],\"type\":[\"VerifiableCredential\"],\"validFrom\":\"2023-02-25T14:23:56Z\",\"issuer\":\"did:example:issuer\",\"credentialSubject\":{\"id\":\"did:example:subject\"},\"credentialStatus\":{\"id\":\"did:example:status\",\"type\":\"CredentialStatusList2017\"}},\"options\":{\"type\":\"Ed25519Signature2020\"}}",
                  "method": "POST",
                  "json": {
                    "credential": {
                      "@context": [
                        "https://www.w3.org/ns/credentials/v2",
                        {
                          "CredentialStatusList2017": "https://example.org/examples#CredentialStatusList2017"
                        }
                      ],
                      "type": [
                        "VerifiableCredential"
                      ],
                      "validFrom": "2023-02-25T14:23:56Z",
                      "issuer": "did:example:issuer",
                      "credentialSubject": {
                        "id": "did:example:subject"
                      },
                      "credentialStatus": {
                        "id": "did:example:status",
                        "type": "CredentialStatusList2017"
                      }
                    },
                    "options": {
                      "type": "Ed25519Signature2020"
                    }
                  },
                  "agent": {
                    "_events": {},
                    "_eventsCount": 2,
                    "defaultPort": 443,
                    "protocol": "https:",
                    "options": {
                      "rejectUnauthorized": false,
                      "noDelay": true,
                      "path": null
                    },
                    "requests": {},
                    "sockets": {},
                    "freeSockets": {},
                    "keepAliveMsecs": 1000,
                    "keepAlive": false,
                    "maxSockets": null,
                    "maxFreeSockets": 256,
                    "scheduling": "lifo",
                    "maxTotalSockets": null,
                    "totalSocketCount": 0,
                    "maxCachedSessions": 100,
                    "_sessionCache": {
                      "map": {},
                      "list": []
                    }
                  },
                  "hooks": {
                    "beforeRequest": [],
                    "beforeRetry": [],
                    "beforeError": [],
                    "afterResponse": []
                  },
                  "prefixUrl": "",
                  "retry": {
                    "limit": 2,
                    "methods": [
                      "get",
                      "put",
                      "head",
                      "delete",
                      "options",
                      "trace"
                    ],
                    "statusCodes": [
                      408,
                      413,
                      429,
                      500,
                      502,
                      503,
                      504
                    ],
                    "afterStatusCodes": [
                      413,
                      429,
                      503
                    ],
                    "maxRetryAfter": null,
                    "backoffLimit": null
                  },
                  "throwHttpErrors": true,
                  "timeout": 10000,
                  "signal": {},
                  "duplex": "half"
                },
                "name": "HTTPError",
                "requestUrl": "https://vc.apicatalog.com/credentials/issue",
                "status": 400,
                "data": {
                  "id": "MALFORMED",
                  "code": "MISSING_CREDENTIAL_STATUS_TYPE",
                  "message": null
                }
              }
            },
            {
              "type": "test",
              "title": "All credentials, presentations, and encapsulated objects MUST specify, or be associated with, additional more narrow types (like UniversityDegreeCredential, for example) so software systems  can process this additional information.",
              "body": "",
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": true,
              "file": "/home/runner/work/vc-data-model-2.0-test-suite/vc-data-model-2.0-test-suite/tests/10-vcdm2.js",
              "parent": "TQy32CushC6lFCaq2JeJG",
              "ctx": null,
              "state": "pending"
            },
            {
              "type": "test",
              "title": "A verifiable credential MUST have a credentialSubject property.",
              "body": "async function() {\n        this.test.cell = {\n          columnId: name,\n          rowId: this.test.title\n        };\n        await fn.apply(this, arguments);\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-data-model-2.0-test-suite/vc-data-model-2.0-test-suite/tests/10-vcdm2.js",
              "parent": "TQy32CushC6lFCaq2JeJG",
              "ctx": null,
              "_testId": "urn:uuid:2d33df1b-6fcf-463b-b47d-f45c9848dcdc",
              "_events": {},
              "_eventsCount": 1,
              "cell": {
                "columnId": "apicatalog.com",
                "rowId": "A verifiable credential MUST have a credentialSubject property."
              },
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 10425,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 51,
              "state": "passed",
              "speed": "medium"
            },
            {
              "type": "test",
              "title": "The value of the credentialSubject property is defined as a set of objects that MUST contain one or more claims that are each related to a subject of the verifiable credential.",
              "body": "async function() {\n        this.test.cell = {\n          columnId: name,\n          rowId: this.test.title\n        };\n        await fn.apply(this, arguments);\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-data-model-2.0-test-suite/vc-data-model-2.0-test-suite/tests/10-vcdm2.js",
              "parent": "TQy32CushC6lFCaq2JeJG",
              "ctx": null,
              "_testId": "urn:uuid:a1526543-7381-4298-9808-398c1b250e8b",
              "_events": {},
              "_eventsCount": 1,
              "cell": {
                "columnId": "apicatalog.com",
                "rowId": "The value of the credentialSubject property is defined as a set of objects that MUST contain one or more claims that are each related to a subject of the verifiable credential."
              },
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 10476,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 105,
              "state": "failed",
              "err": {
                "generatedMessage": false,
                "code": "ERR_ASSERTION",
                "operator": "rejects"
              }
            },
            {
              "type": "test",
              "title": "A verifiable credential MUST have an issuer property.",
              "body": "async function() {\n        this.test.cell = {\n          columnId: name,\n          rowId: this.test.title\n        };\n        await fn.apply(this, arguments);\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-data-model-2.0-test-suite/vc-data-model-2.0-test-suite/tests/10-vcdm2.js",
              "parent": "TQy32CushC6lFCaq2JeJG",
              "ctx": null,
              "_testId": "urn:uuid:25030a3f-a970-4aac-8cd5-e5cf3bb788e1",
              "_events": {},
              "_eventsCount": 1,
              "cell": {
                "columnId": "apicatalog.com",
                "rowId": "A verifiable credential MUST have an issuer property."
              },
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 10581,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 197,
              "state": "failed",
              "err": {
                "generatedMessage": false,
                "code": "ERR_ASSERTION",
                "operator": "rejects"
              }
            },
            {
              "type": "test",
              "title": "The value of the issuer property MUST be either a URL or an object containing an id property.",
              "body": "async function() {\n        this.test.cell = {\n          columnId: name,\n          rowId: this.test.title\n        };\n        await fn.apply(this, arguments);\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-data-model-2.0-test-suite/vc-data-model-2.0-test-suite/tests/10-vcdm2.js",
              "parent": "TQy32CushC6lFCaq2JeJG",
              "ctx": null,
              "_testId": "urn:uuid:d81098ba-3bde-4518-a3f7-fb4f95189b1d",
              "_events": {},
              "_eventsCount": 1,
              "cell": {
                "columnId": "apicatalog.com",
                "rowId": "The value of the issuer property MUST be either a URL or an object containing an id property."
              },
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 10778,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 490,
              "state": "passed",
              "speed": "slow"
            },
            {
              "type": "test",
              "title": "If present, the value of the validFrom property MUST be an [XMLSCHEMA11-2] dateTimeStamp string value representing the date and time the credential becomes valid, which could be a date and time in the future.",
              "body": "async function() {\n        this.test.cell = {\n          columnId: name,\n          rowId: this.test.title\n        };\n        await fn.apply(this, arguments);\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-data-model-2.0-test-suite/vc-data-model-2.0-test-suite/tests/10-vcdm2.js",
              "parent": "TQy32CushC6lFCaq2JeJG",
              "ctx": null,
              "_testId": "urn:uuid:5f3319ab-27b3-46ab-a024-f0bf2467f52e",
              "_events": {},
              "_eventsCount": 1,
              "cell": {
                "columnId": "apicatalog.com",
                "rowId": "If present, the value of the validFrom property MUST be an [XMLSCHEMA11-2] dateTimeStamp string value representing the date and time the credential becomes valid, which could be a date and time in the future."
              },
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 11268,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 803,
              "state": "passed",
              "speed": "slow"
            },
            {
              "type": "test",
              "title": "If present, the value of the validUntil property MUST be a string value of an [XMLSCHEMA11-2] combined date-time string representing the date and time the credential ceases to be valid, which could be a date and time in the past.",
              "body": "async function() {\n        this.test.cell = {\n          columnId: name,\n          rowId: this.test.title\n        };\n        await fn.apply(this, arguments);\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-data-model-2.0-test-suite/vc-data-model-2.0-test-suite/tests/10-vcdm2.js",
              "parent": "TQy32CushC6lFCaq2JeJG",
              "ctx": null,
              "_testId": "urn:uuid:0c385399-5cba-4c73-9dfd-e6526ef1344e",
              "_events": {},
              "_eventsCount": 1,
              "cell": {
                "columnId": "apicatalog.com",
                "rowId": "If present, the value of the validUntil property MUST be a string value of an [XMLSCHEMA11-2] combined date-time string representing the date and time the credential ceases to be valid, which could be a date and time in the past."
              },
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 12071,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 202,
              "state": "failed",
              "err": {
                "response": {},
                "request": {},
                "options": {
                  "credentials": "same-origin",
                  "headers": {},
                  "body": "{\"credential\":{\"@context\":[\"https://www.w3.org/ns/credentials/v2\"],\"type\":[\"VerifiableCredential\"],\"issuer\":\"did:example:issuer\",\"validFrom\":\"2023-02-26T01:19:19Z\",\"validUntil\":\"2023-02-26T01:19:20Z\",\"credentialSubject\":{\"id\":\"did:example:subject\"}},\"options\":{\"type\":\"Ed25519Signature2020\"}}",
                  "method": "POST",
                  "json": {
                    "credential": {
                      "@context": [
                        "https://www.w3.org/ns/credentials/v2"
                      ],
                      "type": [
                        "VerifiableCredential"
                      ],
                      "issuer": "did:example:issuer",
                      "validFrom": "2023-02-26T01:19:19Z",
                      "validUntil": "2023-02-26T01:19:20Z",
                      "credentialSubject": {
                        "id": "did:example:subject"
                      }
                    },
                    "options": {
                      "type": "Ed25519Signature2020"
                    }
                  },
                  "agent": {
                    "_events": {},
                    "_eventsCount": 2,
                    "defaultPort": 443,
                    "protocol": "https:",
                    "options": {
                      "rejectUnauthorized": false,
                      "noDelay": true,
                      "path": null
                    },
                    "requests": {},
                    "sockets": {},
                    "freeSockets": {},
                    "keepAliveMsecs": 1000,
                    "keepAlive": false,
                    "maxSockets": null,
                    "maxFreeSockets": 256,
                    "scheduling": "lifo",
                    "maxTotalSockets": null,
                    "totalSocketCount": 0,
                    "maxCachedSessions": 100,
                    "_sessionCache": {
                      "map": {},
                      "list": []
                    }
                  },
                  "hooks": {
                    "beforeRequest": [],
                    "beforeRetry": [],
                    "beforeError": [],
                    "afterResponse": []
                  },
                  "prefixUrl": "",
                  "retry": {
                    "limit": 2,
                    "methods": [
                      "get",
                      "put",
                      "head",
                      "delete",
                      "options",
                      "trace"
                    ],
                    "statusCodes": [
                      408,
                      413,
                      429,
                      500,
                      502,
                      503,
                      504
                    ],
                    "afterStatusCodes": [
                      413,
                      429,
                      503
                    ],
                    "maxRetryAfter": null,
                    "backoffLimit": null
                  },
                  "throwHttpErrors": true,
                  "timeout": 10000,
                  "signal": {},
                  "duplex": "half"
                },
                "name": "HTTPError",
                "requestUrl": "https://vc.apicatalog.com/credentials/issue",
                "status": 400,
                "data": {
                  "id": "EXPIRED",
                  "message": "Expired"
                }
              }
            },
            {
              "type": "test",
              "title": "At least one proof mechanism, and the details necessary to evaluate that proof, MUST be expressed for a credential or presentation to be a verifiable credential or verifiable presentation; that is, to be verifiable.",
              "body": "",
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": true,
              "file": "/home/runner/work/vc-data-model-2.0-test-suite/vc-data-model-2.0-test-suite/tests/10-vcdm2.js",
              "parent": "TQy32CushC6lFCaq2JeJG",
              "ctx": null,
              "state": "pending"
            },
            {
              "type": "test",
              "title": "When embedding a proof, the proof property MUST be used.",
              "body": "",
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": true,
              "file": "/home/runner/work/vc-data-model-2.0-test-suite/vc-data-model-2.0-test-suite/tests/10-vcdm2.js",
              "parent": "TQy32CushC6lFCaq2JeJG",
              "ctx": null,
              "state": "pending"
            },
            {
              "type": "test",
              "title": "The specific method used for an embedded proof MUST be included using the type property.",
              "body": "",
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": true,
              "file": "/home/runner/work/vc-data-model-2.0-test-suite/vc-data-model-2.0-test-suite/tests/10-vcdm2.js",
              "parent": "TQy32CushC6lFCaq2JeJG",
              "ctx": null,
              "state": "pending"
            },
            {
              "type": "test",
              "title": "If present, the value of the credentialStatus property MUST include id and type",
              "body": "async function() {\n        this.test.cell = {\n          columnId: name,\n          rowId: this.test.title\n        };\n        await fn.apply(this, arguments);\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-data-model-2.0-test-suite/vc-data-model-2.0-test-suite/tests/10-vcdm2.js",
              "parent": "TQy32CushC6lFCaq2JeJG",
              "ctx": null,
              "_testId": "urn:uuid:95999518-2672-4801-8354-46836e95da5f",
              "_events": {},
              "_eventsCount": 1,
              "cell": {
                "columnId": "apicatalog.com",
                "rowId": "If present, the value of the credentialStatus property MUST include id and type"
              },
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 12274,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 101,
              "state": "passed",
              "speed": "slow"
            },
            {
              "type": "test",
              "title": "credentialStatus id property MUST be a URL which MAY be dereferenced.",
              "body": "async function() {\n        this.test.cell = {\n          columnId: name,\n          rowId: this.test.title\n        };\n        await fn.apply(this, arguments);\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-data-model-2.0-test-suite/vc-data-model-2.0-test-suite/tests/10-vcdm2.js",
              "parent": "TQy32CushC6lFCaq2JeJG",
              "ctx": null,
              "_testId": "urn:uuid:6bb290f6-82f7-4671-a1f7-444e121310c4",
              "_events": {},
              "_eventsCount": 1,
              "cell": {
                "columnId": "apicatalog.com",
                "rowId": "credentialStatus id property MUST be a URL which MAY be dereferenced."
              },
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 12376,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 98,
              "state": "passed",
              "speed": "slow"
            },
            {
              "type": "test",
              "title": "The verifiableCredential property MAY be present. The value MUST be an array of one or more verifiable credentials, or of data derived from verifiable credentials in a cryptographically verifiable format.",
              "body": "async function() {\n        this.test.cell = {\n          columnId: name,\n          rowId: this.test.title\n        };\n        await fn.apply(this, arguments);\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-data-model-2.0-test-suite/vc-data-model-2.0-test-suite/tests/10-vcdm2.js",
              "parent": "TQy32CushC6lFCaq2JeJG",
              "ctx": null,
              "_testId": "urn:uuid:6d851d3f-8510-4634-8665-8475868d1ef1",
              "_events": {},
              "_eventsCount": 1,
              "cell": {
                "columnId": "apicatalog.com",
                "rowId": "The verifiableCredential property MAY be present. The value MUST be an array of one or more verifiable credentials, or of data derived from verifiable credentials in a cryptographically verifiable format."
              },
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 12475,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 902,
              "state": "passed",
              "speed": "slow"
            },
            {
              "type": "test",
              "title": "JSON-LD-based processors MUST produce an error when a JSON-LD context redefines any term in the active context.",
              "body": "async function() {\n        this.test.cell = {\n          columnId: name,\n          rowId: this.test.title\n        };\n        await fn.apply(this, arguments);\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-data-model-2.0-test-suite/vc-data-model-2.0-test-suite/tests/10-vcdm2.js",
              "parent": "TQy32CushC6lFCaq2JeJG",
              "ctx": null,
              "_testId": "urn:uuid:646e0b52-622a-4ab6-bf1f-86c9ccdbc31e",
              "_events": {},
              "_eventsCount": 1,
              "cell": {
                "columnId": "apicatalog.com",
                "rowId": "JSON-LD-based processors MUST produce an error when a JSON-LD context redefines any term in the active context."
              },
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 13377,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 199,
              "state": "passed",
              "speed": "slow"
            },
            {
              "type": "test",
              "title": "The value of the credentialSchema property MUST be one or more data schemas that provide verifiers with enough information to determine if the provided data conforms to the provided schema.",
              "body": "async function() {\n        this.test.cell = {\n          columnId: name,\n          rowId: this.test.title\n        };\n        await fn.apply(this, arguments);\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-data-model-2.0-test-suite/vc-data-model-2.0-test-suite/tests/10-vcdm2.js",
              "parent": "TQy32CushC6lFCaq2JeJG",
              "ctx": null,
              "_testId": "urn:uuid:70d23756-44ab-42b0-877c-fa6420345e0b",
              "_events": {},
              "_eventsCount": 1,
              "cell": {
                "columnId": "apicatalog.com",
                "rowId": "The value of the credentialSchema property MUST be one or more data schemas that provide verifiers with enough information to determine if the provided data conforms to the provided schema."
              },
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 13576,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 206,
              "state": "passed",
              "speed": "slow"
            },
            {
              "type": "test",
              "title": "Each credentialSchema MUST specify its type (for example, JsonSchemaValidator2018), and an id property",
              "body": "async function() {\n        this.test.cell = {\n          columnId: name,\n          rowId: this.test.title\n        };\n        await fn.apply(this, arguments);\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-data-model-2.0-test-suite/vc-data-model-2.0-test-suite/tests/10-vcdm2.js",
              "parent": "TQy32CushC6lFCaq2JeJG",
              "ctx": null,
              "_testId": "urn:uuid:89e42ddc-818c-4048-a7ca-46370115a263",
              "_events": {},
              "_eventsCount": 1,
              "cell": {
                "columnId": "apicatalog.com",
                "rowId": "Each credentialSchema MUST specify its type (for example, JsonSchemaValidator2018), and an id property"
              },
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 13782,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 193,
              "state": "failed",
              "err": {
                "generatedMessage": false,
                "code": "ERR_ASSERTION",
                "operator": "rejects"
              }
            },
            {
              "type": "test",
              "title": "credentialSchema id MUST be a URL identifying the schema file.",
              "body": "async function() {\n        this.test.cell = {\n          columnId: name,\n          rowId: this.test.title\n        };\n        await fn.apply(this, arguments);\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-data-model-2.0-test-suite/vc-data-model-2.0-test-suite/tests/10-vcdm2.js",
              "parent": "TQy32CushC6lFCaq2JeJG",
              "ctx": null,
              "_testId": "urn:uuid:94a5ba7b-f1a9-490f-887f-3cebd3fe0b97",
              "_events": {},
              "_eventsCount": 1,
              "cell": {
                "columnId": "apicatalog.com",
                "rowId": "credentialSchema id MUST be a URL identifying the schema file."
              },
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 13975,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 295,
              "state": "failed",
              "err": {
                "generatedMessage": false,
                "code": "ERR_ASSERTION",
                "operator": "rejects"
              }
            },
            {
              "type": "test",
              "title": "The value of the refreshService property MUST be one or more refresh services that provides enough information to the recipient's software such that the recipient can refresh the verifiable credential.",
              "body": "",
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": true,
              "file": "/home/runner/work/vc-data-model-2.0-test-suite/vc-data-model-2.0-test-suite/tests/10-vcdm2.js",
              "parent": "TQy32CushC6lFCaq2JeJG",
              "ctx": null,
              "state": "pending"
            },
            {
              "type": "test",
              "title": "Each refreshService value MUST specify its type (for example, ManualRefreshService2018) and its id, which is the URL of the service.",
              "body": "",
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": true,
              "file": "/home/runner/work/vc-data-model-2.0-test-suite/vc-data-model-2.0-test-suite/tests/10-vcdm2.js",
              "parent": "TQy32CushC6lFCaq2JeJG",
              "ctx": null,
              "state": "pending"
            },
            {
              "type": "test",
              "title": "The value of the termsOfUse property MUST specify one or more terms of use policies under which the creator issued the credential or presentation.",
              "body": "async function() {\n        this.test.cell = {\n          columnId: name,\n          rowId: this.test.title\n        };\n        await fn.apply(this, arguments);\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-data-model-2.0-test-suite/vc-data-model-2.0-test-suite/tests/10-vcdm2.js",
              "parent": "TQy32CushC6lFCaq2JeJG",
              "ctx": null,
              "_testId": "urn:uuid:2ff661ed-b7b6-426d-b686-609562c9e417",
              "_events": {},
              "_eventsCount": 1,
              "cell": {
                "columnId": "apicatalog.com",
                "rowId": "The value of the termsOfUse property MUST specify one or more terms of use policies under which the creator issued the credential or presentation."
              },
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 14270,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 204,
              "state": "passed",
              "speed": "slow"
            },
            {
              "type": "test",
              "title": "Each termsOfUse value MUST specify its type, for example, IssuerPolicy, and MAY specify its instance id.",
              "body": "async function() {\n        this.test.cell = {\n          columnId: name,\n          rowId: this.test.title\n        };\n        await fn.apply(this, arguments);\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-data-model-2.0-test-suite/vc-data-model-2.0-test-suite/tests/10-vcdm2.js",
              "parent": "TQy32CushC6lFCaq2JeJG",
              "ctx": null,
              "_testId": "urn:uuid:23bbd7ee-182c-4a47-92bb-e9865496f43d",
              "_events": {},
              "_eventsCount": 1,
              "cell": {
                "columnId": "apicatalog.com",
                "rowId": "Each termsOfUse value MUST specify its type, for example, IssuerPolicy, and MAY specify its instance id."
              },
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 14474,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 196,
              "state": "failed",
              "err": {
                "generatedMessage": false,
                "code": "ERR_ASSERTION",
                "operator": "rejects"
              }
            },
            {
              "type": "test",
              "title": "The value of the evidence property MUST be one or more evidence schemes providing enough information for a verifier to determine whether the evidence gathered by the issuer meets its confidence requirements for relying on the credential.",
              "body": "async function() {\n        this.test.cell = {\n          columnId: name,\n          rowId: this.test.title\n        };\n        await fn.apply(this, arguments);\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-data-model-2.0-test-suite/vc-data-model-2.0-test-suite/tests/10-vcdm2.js",
              "parent": "TQy32CushC6lFCaq2JeJG",
              "ctx": null,
              "_testId": "urn:uuid:de5bf05b-cf39-4948-b830-914ac7b607c3",
              "_events": {},
              "_eventsCount": 1,
              "cell": {
                "columnId": "apicatalog.com",
                "rowId": "The value of the evidence property MUST be one or more evidence schemes providing enough information for a verifier to determine whether the evidence gathered by the issuer meets its confidence requirements for relying on the credential."
              },
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 14670,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 202,
              "state": "passed",
              "speed": "slow"
            },
            {
              "type": "test",
              "title": "(ZKP) The verifiable credential MUST contain a Proof, using the proof property, so that the holder can derive a verifiable presentation that reveals only the information than the holder intends to reveal.",
              "body": "",
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": true,
              "file": "/home/runner/work/vc-data-model-2.0-test-suite/vc-data-model-2.0-test-suite/tests/10-vcdm2.js",
              "parent": "TQy32CushC6lFCaq2JeJG",
              "ctx": null,
              "state": "pending"
            },
            {
              "type": "test",
              "title": "(ZKP) If a credential definition is being used, the credential definition MUST be defined in the credentialSchema property, so that it can be used by all parties to perform various cryptographic operations in zero-knowledge.",
              "body": "",
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": true,
              "file": "/home/runner/work/vc-data-model-2.0-test-suite/vc-data-model-2.0-test-suite/tests/10-vcdm2.js",
              "parent": "TQy32CushC6lFCaq2JeJG",
              "ctx": null,
              "state": "pending"
            },
            {
              "type": "test",
              "title": "(ZKP) Each derived verifiable credential within a verifiable presentation MUST contain all information necessary to verify the verifiable credential, either by including it directly within the credential, or by referencing the necessary information.",
              "body": "",
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": true,
              "file": "/home/runner/work/vc-data-model-2.0-test-suite/vc-data-model-2.0-test-suite/tests/10-vcdm2.js",
              "parent": "TQy32CushC6lFCaq2JeJG",
              "ctx": null,
              "state": "pending"
            },
            {
              "type": "test",
              "title": "A verifiable presentation MUST NOT leak information that would enable the verifier to correlate the holder across multiple verifiable presentations.",
              "body": "",
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": true,
              "file": "/home/runner/work/vc-data-model-2.0-test-suite/vc-data-model-2.0-test-suite/tests/10-vcdm2.js",
              "parent": "TQy32CushC6lFCaq2JeJG",
              "ctx": null,
              "state": "pending"
            },
            {
              "type": "test",
              "title": "Data model mapping property values to JSON types (not numeric/boolean/sequence/ordered-set/set/empty): \"Other values MUST be represented as a String type.\"",
              "body": "",
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": true,
              "file": "/home/runner/work/vc-data-model-2.0-test-suite/vc-data-model-2.0-test-suite/tests/10-vcdm2.js",
              "parent": "TQy32CushC6lFCaq2JeJG",
              "ctx": null,
              "state": "pending"
            }
          ],
          "root": false,
          "pending": false,
          "_retries": -1,
          "_beforeEach": [],
          "_beforeAll": [],
          "_afterEach": [],
          "_afterAll": [],
          "_timeout": 15000,
          "_slow": 75,
          "_bail": false,
          "_onlyTests": [],
          "_onlySuites": [],
          "delayed": false,
          "parent": "FYJeVPQQ2fE2aXBItDjav",
          "file": "/home/runner/work/vc-data-model-2.0-test-suite/vc-data-model-2.0-test-suite/tests/10-vcdm2.js",
          "_testId": "urn:uuid:c7657459-cfc7-48e1-ae61-035ee9747901"
        },
        {
          "title": "Digital Bazaar",
          "ctx": null,
          "suites": [],
          "tests": [
            {
              "type": "test",
              "title": "Conforming document (compliance): VCDM \"MUST be enforced.\" (\"all relevant normative statements in Sections 4. Basic Concepts, 5. Advanced Concepts, and 6. Syntaxes\")",
              "body": "",
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": true,
              "file": "/home/runner/work/vc-data-model-2.0-test-suite/vc-data-model-2.0-test-suite/tests/10-vcdm2.js",
              "parent": "TI6RL-BkWh9W_duZU9IqH",
              "ctx": null,
              "state": "pending"
            },
            {
              "type": "test",
              "title": "A serialization format for the conforming document MUST be deterministic, bi-directional, and lossless as described in Section 6. Syntaxes.",
              "body": "",
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": true,
              "file": "/home/runner/work/vc-data-model-2.0-test-suite/vc-data-model-2.0-test-suite/tests/10-vcdm2.js",
              "parent": "TI6RL-BkWh9W_duZU9IqH",
              "ctx": null,
              "state": "pending"
            },
            {
              "type": "test",
              "title": "Conforming processors MUST produce errors when non-conforming documents are consumed.",
              "body": "async function() {\n        this.test.cell = {\n          columnId: name,\n          rowId: this.test.title\n        };\n        await fn.apply(this, arguments);\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-data-model-2.0-test-suite/vc-data-model-2.0-test-suite/tests/10-vcdm2.js",
              "parent": "TI6RL-BkWh9W_duZU9IqH",
              "ctx": null,
              "_testId": "urn:uuid:d31bf705-345c-4400-9fea-5f54a96e8fa9",
              "_events": {},
              "_eventsCount": 1,
              "cell": {
                "columnId": "Digital Bazaar",
                "rowId": "Conforming processors MUST produce errors when non-conforming documents are consumed."
              },
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 14874,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 476,
              "state": "passed",
              "speed": "slow"
            },
            {
              "type": "test",
              "title": "Verifiable credentials and verifiable presentations MUST include a @context property.",
              "body": "async function() {\n        this.test.cell = {\n          columnId: name,\n          rowId: this.test.title\n        };\n        await fn.apply(this, arguments);\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-data-model-2.0-test-suite/vc-data-model-2.0-test-suite/tests/10-vcdm2.js",
              "parent": "TI6RL-BkWh9W_duZU9IqH",
              "ctx": null,
              "_testId": "urn:uuid:2cdfe1b6-fd1d-4c68-a1ec-6664ac6dd465",
              "_events": {},
              "_eventsCount": 1,
              "cell": {
                "columnId": "Digital Bazaar",
                "rowId": "Verifiable credentials and verifiable presentations MUST include a @context property."
              },
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 15349,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 944,
              "state": "passed",
              "speed": "slow"
            },
            {
              "type": "test",
              "title": "Verifiable credentials and verifiable presentations: The value of the @context property MUST be an ordered set where the first item is a URL with the value https://www.w3.org/ns/credentials/v2.",
              "body": "async function() {\n        this.test.cell = {\n          columnId: name,\n          rowId: this.test.title\n        };\n        await fn.apply(this, arguments);\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-data-model-2.0-test-suite/vc-data-model-2.0-test-suite/tests/10-vcdm2.js",
              "parent": "TI6RL-BkWh9W_duZU9IqH",
              "ctx": null,
              "_testId": "urn:uuid:1851ef7e-1bd1-44bf-a88b-18d3712c1386",
              "_events": {},
              "_eventsCount": 1,
              "cell": {
                "columnId": "Digital Bazaar",
                "rowId": "Verifiable credentials and verifiable presentations: The value of the @context property MUST be an ordered set where the first item is a URL with the value https://www.w3.org/ns/credentials/v2."
              },
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 16293,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 1401,
              "state": "passed",
              "speed": "slow"
            },
            {
              "type": "test",
              "title": "@context: \"Subsequent items in the array MUST express context information and be composed of any combination of URLs or objects.\"",
              "body": "async function() {\n        this.test.cell = {\n          columnId: name,\n          rowId: this.test.title\n        };\n        await fn.apply(this, arguments);\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-data-model-2.0-test-suite/vc-data-model-2.0-test-suite/tests/10-vcdm2.js",
              "parent": "TI6RL-BkWh9W_duZU9IqH",
              "ctx": null,
              "_testId": "urn:uuid:b7adb81e-1a65-457e-a468-6c4cf8e84d8c",
              "_events": {},
              "_eventsCount": 1,
              "cell": {
                "columnId": "Digital Bazaar",
                "rowId": "@context: \"Subsequent items in the array MUST express context information and be composed of any combination of URLs or objects.\""
              },
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 17695,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 776,
              "state": "passed",
              "speed": "slow"
            },
            {
              "type": "test",
              "title": "if present: \"The id property MUST express an identifier that others are expected to use when expressing statements about a specific thing identified by that identifier.\"",
              "body": "async function() {\n        this.test.cell = {\n          columnId: name,\n          rowId: this.test.title\n        };\n        await fn.apply(this, arguments);\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-data-model-2.0-test-suite/vc-data-model-2.0-test-suite/tests/10-vcdm2.js",
              "parent": "TI6RL-BkWh9W_duZU9IqH",
              "ctx": null,
              "_testId": "urn:uuid:9723debf-db81-44ce-9ab4-428164fdb329",
              "_events": {},
              "_eventsCount": 1,
              "cell": {
                "columnId": "Digital Bazaar",
                "rowId": "if present: \"The id property MUST express an identifier that others are expected to use when expressing statements about a specific thing identified by that identifier.\""
              },
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 18471,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 141,
              "state": "passed",
              "speed": "slow"
            },
            {
              "type": "test",
              "title": "if present: \"The id property MUST NOT have more than one value.\"",
              "body": "async function() {\n        this.test.cell = {\n          columnId: name,\n          rowId: this.test.title\n        };\n        await fn.apply(this, arguments);\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-data-model-2.0-test-suite/vc-data-model-2.0-test-suite/tests/10-vcdm2.js",
              "parent": "TI6RL-BkWh9W_duZU9IqH",
              "ctx": null,
              "_testId": "urn:uuid:f710beb4-13a7-47a6-9670-ae44f93d2453",
              "_events": {},
              "_eventsCount": 1,
              "cell": {
                "columnId": "Digital Bazaar",
                "rowId": "if present: \"The id property MUST NOT have more than one value.\""
              },
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 18613,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 598,
              "state": "passed",
              "speed": "slow"
            },
            {
              "type": "test",
              "title": "if present: \"The value of the id property MUST be a URL which MAY be dereferenced.\"",
              "body": "async function() {\n        this.test.cell = {\n          columnId: name,\n          rowId: this.test.title\n        };\n        await fn.apply(this, arguments);\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-data-model-2.0-test-suite/vc-data-model-2.0-test-suite/tests/10-vcdm2.js",
              "parent": "TI6RL-BkWh9W_duZU9IqH",
              "ctx": null,
              "_testId": "urn:uuid:98ac1d5d-af51-47d5-8127-2a90eaa46909",
              "_events": {},
              "_eventsCount": 1,
              "cell": {
                "columnId": "Digital Bazaar",
                "rowId": "if present: \"The value of the id property MUST be a URL which MAY be dereferenced.\""
              },
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 19212,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 44,
              "state": "passed",
              "speed": "medium"
            },
            {
              "type": "test",
              "title": "The value of the id property MUST be a single URL.",
              "body": "async function() {\n        this.test.cell = {\n          columnId: name,\n          rowId: this.test.title\n        };\n        await fn.apply(this, arguments);\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-data-model-2.0-test-suite/vc-data-model-2.0-test-suite/tests/10-vcdm2.js",
              "parent": "TI6RL-BkWh9W_duZU9IqH",
              "ctx": null,
              "_testId": "urn:uuid:3038137b-595c-406a-8b97-6d004eb911a0",
              "_events": {},
              "_eventsCount": 1,
              "cell": {
                "columnId": "Digital Bazaar",
                "rowId": "The value of the id property MUST be a single URL."
              },
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 19257,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 53,
              "state": "passed",
              "speed": "medium"
            },
            {
              "type": "test",
              "title": "Verifiable credentials and verifiable presentations MUST have a type property.",
              "body": "async function() {\n        this.test.cell = {\n          columnId: name,\n          rowId: this.test.title\n        };\n        await fn.apply(this, arguments);\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-data-model-2.0-test-suite/vc-data-model-2.0-test-suite/tests/10-vcdm2.js",
              "parent": "TI6RL-BkWh9W_duZU9IqH",
              "ctx": null,
              "_testId": "urn:uuid:b1c27213-fc5d-43e7-97ef-510181e8bbc3",
              "_events": {},
              "_eventsCount": 1,
              "cell": {
                "columnId": "Digital Bazaar",
                "rowId": "Verifiable credentials and verifiable presentations MUST have a type property."
              },
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 19310,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 624,
              "state": "passed",
              "speed": "slow"
            },
            {
              "type": "test",
              "title": "The value of the type property MUST be, or map to (through interpretation of the @context property), one or more URLs.",
              "body": "async function() {\n        this.test.cell = {\n          columnId: name,\n          rowId: this.test.title\n        };\n        await fn.apply(this, arguments);\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-data-model-2.0-test-suite/vc-data-model-2.0-test-suite/tests/10-vcdm2.js",
              "parent": "TI6RL-BkWh9W_duZU9IqH",
              "ctx": null,
              "_testId": "urn:uuid:2fdf027d-458d-46a2-9728-26d1a0a3ed6c",
              "_events": {},
              "_eventsCount": 1,
              "cell": {
                "columnId": "Digital Bazaar",
                "rowId": "The value of the type property MUST be, or map to (through interpretation of the @context property), one or more URLs."
              },
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 19935,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 241,
              "state": "passed",
              "speed": "slow"
            },
            {
              "type": "test",
              "title": "type property: \"If more than one URL is provided, the URLs MUST be interpreted as an unordered set.\"",
              "body": "",
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": true,
              "file": "/home/runner/work/vc-data-model-2.0-test-suite/vc-data-model-2.0-test-suite/tests/10-vcdm2.js",
              "parent": "TI6RL-BkWh9W_duZU9IqH",
              "ctx": null,
              "state": "pending"
            },
            {
              "type": "test",
              "title": "list: \"objects that MUST have a type specified.\"",
              "body": "async function() {\n        this.test.cell = {\n          columnId: name,\n          rowId: this.test.title\n        };\n        await fn.apply(this, arguments);\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-data-model-2.0-test-suite/vc-data-model-2.0-test-suite/tests/10-vcdm2.js",
              "parent": "TI6RL-BkWh9W_duZU9IqH",
              "ctx": null,
              "_testId": "urn:uuid:3c24241d-a970-4fab-9135-5dc4b8b71d14",
              "_events": {},
              "_eventsCount": 1,
              "cell": {
                "columnId": "Digital Bazaar",
                "rowId": "list: \"objects that MUST have a type specified.\""
              },
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 20176,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 670,
              "state": "passed",
              "speed": "slow"
            },
            {
              "type": "test",
              "title": "All credentials, presentations, and encapsulated objects MUST specify, or be associated with, additional more narrow types (like UniversityDegreeCredential, for example) so software systems  can process this additional information.",
              "body": "",
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": true,
              "file": "/home/runner/work/vc-data-model-2.0-test-suite/vc-data-model-2.0-test-suite/tests/10-vcdm2.js",
              "parent": "TI6RL-BkWh9W_duZU9IqH",
              "ctx": null,
              "state": "pending"
            },
            {
              "type": "test",
              "title": "A verifiable credential MUST have a credentialSubject property.",
              "body": "async function() {\n        this.test.cell = {\n          columnId: name,\n          rowId: this.test.title\n        };\n        await fn.apply(this, arguments);\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-data-model-2.0-test-suite/vc-data-model-2.0-test-suite/tests/10-vcdm2.js",
              "parent": "TI6RL-BkWh9W_duZU9IqH",
              "ctx": null,
              "_testId": "urn:uuid:61d80cc1-82bf-4e77-950f-629f5866eac4",
              "_events": {},
              "_eventsCount": 1,
              "cell": {
                "columnId": "Digital Bazaar",
                "rowId": "A verifiable credential MUST have a credentialSubject property."
              },
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 20846,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 41,
              "state": "passed",
              "speed": "medium"
            },
            {
              "type": "test",
              "title": "The value of the credentialSubject property is defined as a set of objects that MUST contain one or more claims that are each related to a subject of the verifiable credential.",
              "body": "async function() {\n        this.test.cell = {\n          columnId: name,\n          rowId: this.test.title\n        };\n        await fn.apply(this, arguments);\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-data-model-2.0-test-suite/vc-data-model-2.0-test-suite/tests/10-vcdm2.js",
              "parent": "TI6RL-BkWh9W_duZU9IqH",
              "ctx": null,
              "_testId": "urn:uuid:5aba5098-8195-4147-b3d2-cbe1f2cbd92b",
              "_events": {},
              "_eventsCount": 1,
              "cell": {
                "columnId": "Digital Bazaar",
                "rowId": "The value of the credentialSubject property is defined as a set of objects that MUST contain one or more claims that are each related to a subject of the verifiable credential."
              },
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 20887,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 152,
              "state": "passed",
              "speed": "slow"
            },
            {
              "type": "test",
              "title": "A verifiable credential MUST have an issuer property.",
              "body": "async function() {\n        this.test.cell = {\n          columnId: name,\n          rowId: this.test.title\n        };\n        await fn.apply(this, arguments);\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-data-model-2.0-test-suite/vc-data-model-2.0-test-suite/tests/10-vcdm2.js",
              "parent": "TI6RL-BkWh9W_duZU9IqH",
              "ctx": null,
              "_testId": "urn:uuid:081dc03d-8336-4e55-94f9-8fb3fd6e1061",
              "_events": {},
              "_eventsCount": 1,
              "cell": {
                "columnId": "Digital Bazaar",
                "rowId": "A verifiable credential MUST have an issuer property."
              },
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 21039,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 38,
              "state": "passed",
              "speed": "medium"
            },
            {
              "type": "test",
              "title": "The value of the issuer property MUST be either a URL or an object containing an id property.",
              "body": "async function() {\n        this.test.cell = {\n          columnId: name,\n          rowId: this.test.title\n        };\n        await fn.apply(this, arguments);\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-data-model-2.0-test-suite/vc-data-model-2.0-test-suite/tests/10-vcdm2.js",
              "parent": "TI6RL-BkWh9W_duZU9IqH",
              "ctx": null,
              "_testId": "urn:uuid:fcf59f6a-4e39-43d9-b01f-c215b2fcd299",
              "_events": {},
              "_eventsCount": 1,
              "cell": {
                "columnId": "Digital Bazaar",
                "rowId": "The value of the issuer property MUST be either a URL or an object containing an id property."
              },
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 21077,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 73,
              "state": "failed",
              "err": {
                "generatedMessage": false,
                "code": "ERR_ASSERTION",
                "operator": "rejects"
              }
            },
            {
              "type": "test",
              "title": "If present, the value of the validFrom property MUST be an [XMLSCHEMA11-2] dateTimeStamp string value representing the date and time the credential becomes valid, which could be a date and time in the future.",
              "body": "async function() {\n        this.test.cell = {\n          columnId: name,\n          rowId: this.test.title\n        };\n        await fn.apply(this, arguments);\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-data-model-2.0-test-suite/vc-data-model-2.0-test-suite/tests/10-vcdm2.js",
              "parent": "TI6RL-BkWh9W_duZU9IqH",
              "ctx": null,
              "_testId": "urn:uuid:f34e4308-4300-48a7-80a2-fd4d3c13f3e0",
              "_events": {},
              "_eventsCount": 1,
              "cell": {
                "columnId": "Digital Bazaar",
                "rowId": "If present, the value of the validFrom property MUST be an [XMLSCHEMA11-2] dateTimeStamp string value representing the date and time the credential becomes valid, which could be a date and time in the future."
              },
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 21151,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 226,
              "state": "failed",
              "err": {
                "generatedMessage": false,
                "code": "ERR_ASSERTION",
                "operator": "rejects"
              }
            },
            {
              "type": "test",
              "title": "If present, the value of the validUntil property MUST be a string value of an [XMLSCHEMA11-2] combined date-time string representing the date and time the credential ceases to be valid, which could be a date and time in the past.",
              "body": "async function() {\n        this.test.cell = {\n          columnId: name,\n          rowId: this.test.title\n        };\n        await fn.apply(this, arguments);\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-data-model-2.0-test-suite/vc-data-model-2.0-test-suite/tests/10-vcdm2.js",
              "parent": "TI6RL-BkWh9W_duZU9IqH",
              "ctx": null,
              "_testId": "urn:uuid:ee415e9c-a687-4ec1-9318-8c8cea3a4037",
              "_events": {},
              "_eventsCount": 1,
              "cell": {
                "columnId": "Digital Bazaar",
                "rowId": "If present, the value of the validUntil property MUST be a string value of an [XMLSCHEMA11-2] combined date-time string representing the date and time the credential ceases to be valid, which could be a date and time in the past."
              },
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 21377,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 287,
              "state": "failed",
              "err": {
                "generatedMessage": false,
                "code": "ERR_ASSERTION",
                "operator": "rejects"
              }
            },
            {
              "type": "test",
              "title": "At least one proof mechanism, and the details necessary to evaluate that proof, MUST be expressed for a credential or presentation to be a verifiable credential or verifiable presentation; that is, to be verifiable.",
              "body": "",
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": true,
              "file": "/home/runner/work/vc-data-model-2.0-test-suite/vc-data-model-2.0-test-suite/tests/10-vcdm2.js",
              "parent": "TI6RL-BkWh9W_duZU9IqH",
              "ctx": null,
              "state": "pending"
            },
            {
              "type": "test",
              "title": "When embedding a proof, the proof property MUST be used.",
              "body": "",
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": true,
              "file": "/home/runner/work/vc-data-model-2.0-test-suite/vc-data-model-2.0-test-suite/tests/10-vcdm2.js",
              "parent": "TI6RL-BkWh9W_duZU9IqH",
              "ctx": null,
              "state": "pending"
            },
            {
              "type": "test",
              "title": "The specific method used for an embedded proof MUST be included using the type property.",
              "body": "",
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": true,
              "file": "/home/runner/work/vc-data-model-2.0-test-suite/vc-data-model-2.0-test-suite/tests/10-vcdm2.js",
              "parent": "TI6RL-BkWh9W_duZU9IqH",
              "ctx": null,
              "state": "pending"
            },
            {
              "type": "test",
              "title": "If present, the value of the credentialStatus property MUST include id and type",
              "body": "async function() {\n        this.test.cell = {\n          columnId: name,\n          rowId: this.test.title\n        };\n        await fn.apply(this, arguments);\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-data-model-2.0-test-suite/vc-data-model-2.0-test-suite/tests/10-vcdm2.js",
              "parent": "TI6RL-BkWh9W_duZU9IqH",
              "ctx": null,
              "_testId": "urn:uuid:44bbc8f1-6bf8-48dc-b2f7-4798e8743a79",
              "_events": {},
              "_eventsCount": 1,
              "cell": {
                "columnId": "Digital Bazaar",
                "rowId": "If present, the value of the credentialStatus property MUST include id and type"
              },
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 21665,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 36,
              "state": "passed",
              "speed": "fast"
            },
            {
              "type": "test",
              "title": "credentialStatus id property MUST be a URL which MAY be dereferenced.",
              "body": "async function() {\n        this.test.cell = {\n          columnId: name,\n          rowId: this.test.title\n        };\n        await fn.apply(this, arguments);\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-data-model-2.0-test-suite/vc-data-model-2.0-test-suite/tests/10-vcdm2.js",
              "parent": "TI6RL-BkWh9W_duZU9IqH",
              "ctx": null,
              "_testId": "urn:uuid:28568f61-9936-4efb-a502-33fe8a433370",
              "_events": {},
              "_eventsCount": 1,
              "cell": {
                "columnId": "Digital Bazaar",
                "rowId": "credentialStatus id property MUST be a URL which MAY be dereferenced."
              },
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 21701,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 42,
              "state": "passed",
              "speed": "medium"
            },
            {
              "type": "test",
              "title": "The verifiableCredential property MAY be present. The value MUST be an array of one or more verifiable credentials, or of data derived from verifiable credentials in a cryptographically verifiable format.",
              "body": "async function() {\n        this.test.cell = {\n          columnId: name,\n          rowId: this.test.title\n        };\n        await fn.apply(this, arguments);\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-data-model-2.0-test-suite/vc-data-model-2.0-test-suite/tests/10-vcdm2.js",
              "parent": "TI6RL-BkWh9W_duZU9IqH",
              "ctx": null,
              "_testId": "urn:uuid:d34e57f4-d9b0-42ec-b1f8-6d57eede7c46",
              "_events": {},
              "_eventsCount": 1,
              "cell": {
                "columnId": "Digital Bazaar",
                "rowId": "The verifiableCredential property MAY be present. The value MUST be an array of one or more verifiable credentials, or of data derived from verifiable credentials in a cryptographically verifiable format."
              },
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 21743,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 239,
              "state": "passed",
              "speed": "slow"
            },
            {
              "type": "test",
              "title": "JSON-LD-based processors MUST produce an error when a JSON-LD context redefines any term in the active context.",
              "body": "async function() {\n        this.test.cell = {\n          columnId: name,\n          rowId: this.test.title\n        };\n        await fn.apply(this, arguments);\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-data-model-2.0-test-suite/vc-data-model-2.0-test-suite/tests/10-vcdm2.js",
              "parent": "TI6RL-BkWh9W_duZU9IqH",
              "ctx": null,
              "_testId": "urn:uuid:c5433c92-60c4-483c-a137-b48ab56e37f3",
              "_events": {},
              "_eventsCount": 1,
              "cell": {
                "columnId": "Digital Bazaar",
                "rowId": "JSON-LD-based processors MUST produce an error when a JSON-LD context redefines any term in the active context."
              },
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 21982,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 99,
              "state": "passed",
              "speed": "slow"
            },
            {
              "type": "test",
              "title": "The value of the credentialSchema property MUST be one or more data schemas that provide verifiers with enough information to determine if the provided data conforms to the provided schema.",
              "body": "async function() {\n        this.test.cell = {\n          columnId: name,\n          rowId: this.test.title\n        };\n        await fn.apply(this, arguments);\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-data-model-2.0-test-suite/vc-data-model-2.0-test-suite/tests/10-vcdm2.js",
              "parent": "TI6RL-BkWh9W_duZU9IqH",
              "ctx": null,
              "_testId": "urn:uuid:9e8765fa-99a2-4f5d-837a-efc91f04f85e",
              "_events": {},
              "_eventsCount": 1,
              "cell": {
                "columnId": "Digital Bazaar",
                "rowId": "The value of the credentialSchema property MUST be one or more data schemas that provide verifiers with enough information to determine if the provided data conforms to the provided schema."
              },
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 22081,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 138,
              "state": "passed",
              "speed": "slow"
            },
            {
              "type": "test",
              "title": "Each credentialSchema MUST specify its type (for example, JsonSchemaValidator2018), and an id property",
              "body": "async function() {\n        this.test.cell = {\n          columnId: name,\n          rowId: this.test.title\n        };\n        await fn.apply(this, arguments);\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-data-model-2.0-test-suite/vc-data-model-2.0-test-suite/tests/10-vcdm2.js",
              "parent": "TI6RL-BkWh9W_duZU9IqH",
              "ctx": null,
              "_testId": "urn:uuid:8cb3df45-209d-44dd-bcfe-63293e8e62ac",
              "_events": {},
              "_eventsCount": 1,
              "cell": {
                "columnId": "Digital Bazaar",
                "rowId": "Each credentialSchema MUST specify its type (for example, JsonSchemaValidator2018), and an id property"
              },
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 22219,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 62,
              "state": "failed",
              "err": {
                "generatedMessage": false,
                "code": "ERR_ASSERTION",
                "operator": "rejects"
              }
            },
            {
              "type": "test",
              "title": "credentialSchema id MUST be a URL identifying the schema file.",
              "body": "async function() {\n        this.test.cell = {\n          columnId: name,\n          rowId: this.test.title\n        };\n        await fn.apply(this, arguments);\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-data-model-2.0-test-suite/vc-data-model-2.0-test-suite/tests/10-vcdm2.js",
              "parent": "TI6RL-BkWh9W_duZU9IqH",
              "ctx": null,
              "_testId": "urn:uuid:370c7371-cc88-4463-9f23-5c0326e37a06",
              "_events": {},
              "_eventsCount": 1,
              "cell": {
                "columnId": "Digital Bazaar",
                "rowId": "credentialSchema id MUST be a URL identifying the schema file."
              },
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 22282,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 39,
              "state": "passed",
              "speed": "medium"
            },
            {
              "type": "test",
              "title": "The value of the refreshService property MUST be one or more refresh services that provides enough information to the recipient's software such that the recipient can refresh the verifiable credential.",
              "body": "",
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": true,
              "file": "/home/runner/work/vc-data-model-2.0-test-suite/vc-data-model-2.0-test-suite/tests/10-vcdm2.js",
              "parent": "TI6RL-BkWh9W_duZU9IqH",
              "ctx": null,
              "state": "pending"
            },
            {
              "type": "test",
              "title": "Each refreshService value MUST specify its type (for example, ManualRefreshService2018) and its id, which is the URL of the service.",
              "body": "",
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": true,
              "file": "/home/runner/work/vc-data-model-2.0-test-suite/vc-data-model-2.0-test-suite/tests/10-vcdm2.js",
              "parent": "TI6RL-BkWh9W_duZU9IqH",
              "ctx": null,
              "state": "pending"
            },
            {
              "type": "test",
              "title": "The value of the termsOfUse property MUST specify one or more terms of use policies under which the creator issued the credential or presentation.",
              "body": "async function() {\n        this.test.cell = {\n          columnId: name,\n          rowId: this.test.title\n        };\n        await fn.apply(this, arguments);\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-data-model-2.0-test-suite/vc-data-model-2.0-test-suite/tests/10-vcdm2.js",
              "parent": "TI6RL-BkWh9W_duZU9IqH",
              "ctx": null,
              "_testId": "urn:uuid:f9792984-bf07-4371-aa0c-ef30e2a8c346",
              "_events": {},
              "_eventsCount": 1,
              "cell": {
                "columnId": "Digital Bazaar",
                "rowId": "The value of the termsOfUse property MUST specify one or more terms of use policies under which the creator issued the credential or presentation."
              },
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 22321,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 62,
              "state": "passed",
              "speed": "medium"
            },
            {
              "type": "test",
              "title": "Each termsOfUse value MUST specify its type, for example, IssuerPolicy, and MAY specify its instance id.",
              "body": "async function() {\n        this.test.cell = {\n          columnId: name,\n          rowId: this.test.title\n        };\n        await fn.apply(this, arguments);\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-data-model-2.0-test-suite/vc-data-model-2.0-test-suite/tests/10-vcdm2.js",
              "parent": "TI6RL-BkWh9W_duZU9IqH",
              "ctx": null,
              "_testId": "urn:uuid:fd48a0ac-e148-47c5-bc1f-244e38d8bac0",
              "_events": {},
              "_eventsCount": 1,
              "cell": {
                "columnId": "Digital Bazaar",
                "rowId": "Each termsOfUse value MUST specify its type, for example, IssuerPolicy, and MAY specify its instance id."
              },
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 22382,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 170,
              "state": "passed",
              "speed": "slow"
            },
            {
              "type": "test",
              "title": "The value of the evidence property MUST be one or more evidence schemes providing enough information for a verifier to determine whether the evidence gathered by the issuer meets its confidence requirements for relying on the credential.",
              "body": "async function() {\n        this.test.cell = {\n          columnId: name,\n          rowId: this.test.title\n        };\n        await fn.apply(this, arguments);\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-data-model-2.0-test-suite/vc-data-model-2.0-test-suite/tests/10-vcdm2.js",
              "parent": "TI6RL-BkWh9W_duZU9IqH",
              "ctx": null,
              "_testId": "urn:uuid:a86d473b-24df-4a4e-ba28-2877eb291c69",
              "_events": {},
              "_eventsCount": 1,
              "cell": {
                "columnId": "Digital Bazaar",
                "rowId": "The value of the evidence property MUST be one or more evidence schemes providing enough information for a verifier to determine whether the evidence gathered by the issuer meets its confidence requirements for relying on the credential."
              },
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 22553,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 67,
              "state": "passed",
              "speed": "medium"
            },
            {
              "type": "test",
              "title": "(ZKP) The verifiable credential MUST contain a Proof, using the proof property, so that the holder can derive a verifiable presentation that reveals only the information than the holder intends to reveal.",
              "body": "",
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": true,
              "file": "/home/runner/work/vc-data-model-2.0-test-suite/vc-data-model-2.0-test-suite/tests/10-vcdm2.js",
              "parent": "TI6RL-BkWh9W_duZU9IqH",
              "ctx": null,
              "state": "pending"
            },
            {
              "type": "test",
              "title": "(ZKP) If a credential definition is being used, the credential definition MUST be defined in the credentialSchema property, so that it can be used by all parties to perform various cryptographic operations in zero-knowledge.",
              "body": "",
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": true,
              "file": "/home/runner/work/vc-data-model-2.0-test-suite/vc-data-model-2.0-test-suite/tests/10-vcdm2.js",
              "parent": "TI6RL-BkWh9W_duZU9IqH",
              "ctx": null,
              "state": "pending"
            },
            {
              "type": "test",
              "title": "(ZKP) Each derived verifiable credential within a verifiable presentation MUST contain all information necessary to verify the verifiable credential, either by including it directly within the credential, or by referencing the necessary information.",
              "body": "",
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": true,
              "file": "/home/runner/work/vc-data-model-2.0-test-suite/vc-data-model-2.0-test-suite/tests/10-vcdm2.js",
              "parent": "TI6RL-BkWh9W_duZU9IqH",
              "ctx": null,
              "state": "pending"
            },
            {
              "type": "test",
              "title": "A verifiable presentation MUST NOT leak information that would enable the verifier to correlate the holder across multiple verifiable presentations.",
              "body": "",
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": true,
              "file": "/home/runner/work/vc-data-model-2.0-test-suite/vc-data-model-2.0-test-suite/tests/10-vcdm2.js",
              "parent": "TI6RL-BkWh9W_duZU9IqH",
              "ctx": null,
              "state": "pending"
            },
            {
              "type": "test",
              "title": "Data model mapping property values to JSON types (not numeric/boolean/sequence/ordered-set/set/empty): \"Other values MUST be represented as a String type.\"",
              "body": "",
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": true,
              "file": "/home/runner/work/vc-data-model-2.0-test-suite/vc-data-model-2.0-test-suite/tests/10-vcdm2.js",
              "parent": "TI6RL-BkWh9W_duZU9IqH",
              "ctx": null,
              "state": "pending"
            }
          ],
          "root": false,
          "pending": false,
          "_retries": -1,
          "_beforeEach": [],
          "_beforeAll": [],
          "_afterEach": [],
          "_afterAll": [],
          "_timeout": 15000,
          "_slow": 75,
          "_bail": false,
          "_onlyTests": [],
          "_onlySuites": [],
          "delayed": false,
          "parent": "FYJeVPQQ2fE2aXBItDjav",
          "file": "/home/runner/work/vc-data-model-2.0-test-suite/vc-data-model-2.0-test-suite/tests/10-vcdm2.js",
          "_testId": "urn:uuid:ff1b0f47-bee2-4be9-a130-514cbc8f61aa"
        }
      ],
      "root": false,
      "pending": false,
      "_retries": -1,
      "_beforeEach": [],
      "_beforeAll": [],
      "_afterEach": [],
      "_afterAll": [],
      "_timeout": 15000,
      "_slow": 75,
      "_bail": false,
      "_onlyTests": [],
      "_onlySuites": [],
      "delayed": false,
      "parent": "SGxBGf40K4kwxOnn6lUbv",
      "file": "/home/runner/work/vc-data-model-2.0-test-suite/vc-data-model-2.0-test-suite/tests/10-vcdm2.js",
      "summary": {},
      "matrix": true,
      "report": true,
      "rowLabel": "Test Name",
      "columnLabel": "Issuer",
      "reportData": [],
      "_testId": "urn:uuid:f859229f-4b5f-46ff-b6a6-cb6eb91d4ce0",
      "columns": [
        "apicatalog.com",
        "Digital Bazaar"
      ],
      "rows": [
        {
          "id": "Conforming processors MUST produce errors when non-conforming documents are consumed.",
          "cells": [
            {
              "type": "test",
              "title": "Conforming processors MUST produce errors when non-conforming documents are consumed.",
              "body": "async function() {\n        this.test.cell = {\n          columnId: name,\n          rowId: this.test.title\n        };\n        await fn.apply(this, arguments);\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-data-model-2.0-test-suite/vc-data-model-2.0-test-suite/tests/10-vcdm2.js",
              "parent": "TQy32CushC6lFCaq2JeJG",
              "ctx": null,
              "_testId": "urn:uuid:52203ca6-0f0e-44d0-917c-ae3c1099cb36",
              "_events": {},
              "_eventsCount": 1,
              "cell": {
                "columnId": "apicatalog.com",
                "rowId": "Conforming processors MUST produce errors when non-conforming documents are consumed."
              },
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 333,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 422,
              "state": "passed",
              "speed": "slow"
            },
            {
              "type": "test",
              "title": "Conforming processors MUST produce errors when non-conforming documents are consumed.",
              "body": "async function() {\n        this.test.cell = {\n          columnId: name,\n          rowId: this.test.title\n        };\n        await fn.apply(this, arguments);\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-data-model-2.0-test-suite/vc-data-model-2.0-test-suite/tests/10-vcdm2.js",
              "parent": "TI6RL-BkWh9W_duZU9IqH",
              "ctx": null,
              "_testId": "urn:uuid:d31bf705-345c-4400-9fea-5f54a96e8fa9",
              "_events": {},
              "_eventsCount": 1,
              "cell": {
                "columnId": "Digital Bazaar",
                "rowId": "Conforming processors MUST produce errors when non-conforming documents are consumed."
              },
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 14874,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 476,
              "state": "passed",
              "speed": "slow"
            }
          ]
        },
        {
          "id": "Verifiable credentials and verifiable presentations MUST include a @context property.",
          "cells": [
            {
              "type": "test",
              "title": "Verifiable credentials and verifiable presentations MUST include a @context property.",
              "body": "async function() {\n        this.test.cell = {\n          columnId: name,\n          rowId: this.test.title\n        };\n        await fn.apply(this, arguments);\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-data-model-2.0-test-suite/vc-data-model-2.0-test-suite/tests/10-vcdm2.js",
              "parent": "TQy32CushC6lFCaq2JeJG",
              "ctx": null,
              "_testId": "urn:uuid:ebba5c19-7f8d-4cb8-9d02-a9e20eb40de8",
              "_events": {},
              "_eventsCount": 1,
              "cell": {
                "columnId": "apicatalog.com",
                "rowId": "Verifiable credentials and verifiable presentations MUST include a @context property."
              },
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 755,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 323,
              "state": "passed",
              "speed": "slow"
            },
            {
              "type": "test",
              "title": "Verifiable credentials and verifiable presentations MUST include a @context property.",
              "body": "async function() {\n        this.test.cell = {\n          columnId: name,\n          rowId: this.test.title\n        };\n        await fn.apply(this, arguments);\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-data-model-2.0-test-suite/vc-data-model-2.0-test-suite/tests/10-vcdm2.js",
              "parent": "TI6RL-BkWh9W_duZU9IqH",
              "ctx": null,
              "_testId": "urn:uuid:2cdfe1b6-fd1d-4c68-a1ec-6664ac6dd465",
              "_events": {},
              "_eventsCount": 1,
              "cell": {
                "columnId": "Digital Bazaar",
                "rowId": "Verifiable credentials and verifiable presentations MUST include a @context property."
              },
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 15349,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 944,
              "state": "passed",
              "speed": "slow"
            }
          ]
        },
        {
          "id": "Verifiable credentials and verifiable presentations: The value of the @context property MUST be an ordered set where the first item is a URL with the value https://www.w3.org/ns/credentials/v2.",
          "cells": [
            {
              "type": "test",
              "title": "Verifiable credentials and verifiable presentations: The value of the @context property MUST be an ordered set where the first item is a URL with the value https://www.w3.org/ns/credentials/v2.",
              "body": "async function() {\n        this.test.cell = {\n          columnId: name,\n          rowId: this.test.title\n        };\n        await fn.apply(this, arguments);\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-data-model-2.0-test-suite/vc-data-model-2.0-test-suite/tests/10-vcdm2.js",
              "parent": "TQy32CushC6lFCaq2JeJG",
              "ctx": null,
              "_testId": "urn:uuid:4bb0b7d2-4e99-4944-903f-01e69b213972",
              "_events": {},
              "_eventsCount": 1,
              "cell": {
                "columnId": "apicatalog.com",
                "rowId": "Verifiable credentials and verifiable presentations: The value of the @context property MUST be an ordered set where the first item is a URL with the value https://www.w3.org/ns/credentials/v2."
              },
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 1078,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 4274,
              "state": "passed",
              "speed": "slow"
            },
            {
              "type": "test",
              "title": "Verifiable credentials and verifiable presentations: The value of the @context property MUST be an ordered set where the first item is a URL with the value https://www.w3.org/ns/credentials/v2.",
              "body": "async function() {\n        this.test.cell = {\n          columnId: name,\n          rowId: this.test.title\n        };\n        await fn.apply(this, arguments);\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-data-model-2.0-test-suite/vc-data-model-2.0-test-suite/tests/10-vcdm2.js",
              "parent": "TI6RL-BkWh9W_duZU9IqH",
              "ctx": null,
              "_testId": "urn:uuid:1851ef7e-1bd1-44bf-a88b-18d3712c1386",
              "_events": {},
              "_eventsCount": 1,
              "cell": {
                "columnId": "Digital Bazaar",
                "rowId": "Verifiable credentials and verifiable presentations: The value of the @context property MUST be an ordered set where the first item is a URL with the value https://www.w3.org/ns/credentials/v2."
              },
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 16293,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 1401,
              "state": "passed",
              "speed": "slow"
            }
          ]
        },
        {
          "id": "@context: \"Subsequent items in the array MUST express context information and be composed of any combination of URLs or objects.\"",
          "cells": [
            {
              "type": "test",
              "title": "@context: \"Subsequent items in the array MUST express context information and be composed of any combination of URLs or objects.\"",
              "body": "async function() {\n        this.test.cell = {\n          columnId: name,\n          rowId: this.test.title\n        };\n        await fn.apply(this, arguments);\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-data-model-2.0-test-suite/vc-data-model-2.0-test-suite/tests/10-vcdm2.js",
              "parent": "TQy32CushC6lFCaq2JeJG",
              "ctx": null,
              "_testId": "urn:uuid:61f75a9f-c27f-48c2-b6f0-42ab4265dcee",
              "_events": {},
              "_eventsCount": 1,
              "cell": {
                "columnId": "apicatalog.com",
                "rowId": "@context: \"Subsequent items in the array MUST express context information and be composed of any combination of URLs or objects.\""
              },
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 5354,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 721,
              "state": "passed",
              "speed": "slow"
            },
            {
              "type": "test",
              "title": "@context: \"Subsequent items in the array MUST express context information and be composed of any combination of URLs or objects.\"",
              "body": "async function() {\n        this.test.cell = {\n          columnId: name,\n          rowId: this.test.title\n        };\n        await fn.apply(this, arguments);\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-data-model-2.0-test-suite/vc-data-model-2.0-test-suite/tests/10-vcdm2.js",
              "parent": "TI6RL-BkWh9W_duZU9IqH",
              "ctx": null,
              "_testId": "urn:uuid:b7adb81e-1a65-457e-a468-6c4cf8e84d8c",
              "_events": {},
              "_eventsCount": 1,
              "cell": {
                "columnId": "Digital Bazaar",
                "rowId": "@context: \"Subsequent items in the array MUST express context information and be composed of any combination of URLs or objects.\""
              },
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 17695,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 776,
              "state": "passed",
              "speed": "slow"
            }
          ]
        },
        {
          "id": "if present: \"The id property MUST express an identifier that others are expected to use when expressing statements about a specific thing identified by that identifier.\"",
          "cells": [
            {
              "type": "test",
              "title": "if present: \"The id property MUST express an identifier that others are expected to use when expressing statements about a specific thing identified by that identifier.\"",
              "body": "async function() {\n        this.test.cell = {\n          columnId: name,\n          rowId: this.test.title\n        };\n        await fn.apply(this, arguments);\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-data-model-2.0-test-suite/vc-data-model-2.0-test-suite/tests/10-vcdm2.js",
              "parent": "TQy32CushC6lFCaq2JeJG",
              "ctx": null,
              "_testId": "urn:uuid:d0934987-69fe-49b2-a889-74b978f477e5",
              "_events": {},
              "_eventsCount": 1,
              "cell": {
                "columnId": "apicatalog.com",
                "rowId": "if present: \"The id property MUST express an identifier that others are expected to use when expressing statements about a specific thing identified by that identifier.\""
              },
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 6076,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 391,
              "state": "passed",
              "speed": "slow"
            },
            {
              "type": "test",
              "title": "if present: \"The id property MUST express an identifier that others are expected to use when expressing statements about a specific thing identified by that identifier.\"",
              "body": "async function() {\n        this.test.cell = {\n          columnId: name,\n          rowId: this.test.title\n        };\n        await fn.apply(this, arguments);\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-data-model-2.0-test-suite/vc-data-model-2.0-test-suite/tests/10-vcdm2.js",
              "parent": "TI6RL-BkWh9W_duZU9IqH",
              "ctx": null,
              "_testId": "urn:uuid:9723debf-db81-44ce-9ab4-428164fdb329",
              "_events": {},
              "_eventsCount": 1,
              "cell": {
                "columnId": "Digital Bazaar",
                "rowId": "if present: \"The id property MUST express an identifier that others are expected to use when expressing statements about a specific thing identified by that identifier.\""
              },
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 18471,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 141,
              "state": "passed",
              "speed": "slow"
            }
          ]
        },
        {
          "id": "if present: \"The id property MUST NOT have more than one value.\"",
          "cells": [
            {
              "type": "test",
              "title": "if present: \"The id property MUST NOT have more than one value.\"",
              "body": "async function() {\n        this.test.cell = {\n          columnId: name,\n          rowId: this.test.title\n        };\n        await fn.apply(this, arguments);\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-data-model-2.0-test-suite/vc-data-model-2.0-test-suite/tests/10-vcdm2.js",
              "parent": "TQy32CushC6lFCaq2JeJG",
              "ctx": null,
              "_testId": "urn:uuid:ad8e5465-a926-47bd-9d2f-2a47dd54f681",
              "_events": {},
              "_eventsCount": 1,
              "cell": {
                "columnId": "apicatalog.com",
                "rowId": "if present: \"The id property MUST NOT have more than one value.\""
              },
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 6471,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 820,
              "state": "passed",
              "speed": "slow"
            },
            {
              "type": "test",
              "title": "if present: \"The id property MUST NOT have more than one value.\"",
              "body": "async function() {\n        this.test.cell = {\n          columnId: name,\n          rowId: this.test.title\n        };\n        await fn.apply(this, arguments);\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-data-model-2.0-test-suite/vc-data-model-2.0-test-suite/tests/10-vcdm2.js",
              "parent": "TI6RL-BkWh9W_duZU9IqH",
              "ctx": null,
              "_testId": "urn:uuid:f710beb4-13a7-47a6-9670-ae44f93d2453",
              "_events": {},
              "_eventsCount": 1,
              "cell": {
                "columnId": "Digital Bazaar",
                "rowId": "if present: \"The id property MUST NOT have more than one value.\""
              },
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 18613,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 598,
              "state": "passed",
              "speed": "slow"
            }
          ]
        },
        {
          "id": "if present: \"The value of the id property MUST be a URL which MAY be dereferenced.\"",
          "cells": [
            {
              "type": "test",
              "title": "if present: \"The value of the id property MUST be a URL which MAY be dereferenced.\"",
              "body": "async function() {\n        this.test.cell = {\n          columnId: name,\n          rowId: this.test.title\n        };\n        await fn.apply(this, arguments);\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-data-model-2.0-test-suite/vc-data-model-2.0-test-suite/tests/10-vcdm2.js",
              "parent": "TQy32CushC6lFCaq2JeJG",
              "ctx": null,
              "_testId": "urn:uuid:46dad5c2-76f5-480d-8186-3e6f2c871f1e",
              "_events": {},
              "_eventsCount": 1,
              "cell": {
                "columnId": "apicatalog.com",
                "rowId": "if present: \"The value of the id property MUST be a URL which MAY be dereferenced.\""
              },
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 7291,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 480,
              "state": "passed",
              "speed": "slow"
            },
            {
              "type": "test",
              "title": "if present: \"The value of the id property MUST be a URL which MAY be dereferenced.\"",
              "body": "async function() {\n        this.test.cell = {\n          columnId: name,\n          rowId: this.test.title\n        };\n        await fn.apply(this, arguments);\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-data-model-2.0-test-suite/vc-data-model-2.0-test-suite/tests/10-vcdm2.js",
              "parent": "TI6RL-BkWh9W_duZU9IqH",
              "ctx": null,
              "_testId": "urn:uuid:98ac1d5d-af51-47d5-8127-2a90eaa46909",
              "_events": {},
              "_eventsCount": 1,
              "cell": {
                "columnId": "Digital Bazaar",
                "rowId": "if present: \"The value of the id property MUST be a URL which MAY be dereferenced.\""
              },
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 19212,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 44,
              "state": "passed",
              "speed": "medium"
            }
          ]
        },
        {
          "id": "The value of the id property MUST be a single URL.",
          "cells": [
            {
              "type": "test",
              "title": "The value of the id property MUST be a single URL.",
              "body": "async function() {\n        this.test.cell = {\n          columnId: name,\n          rowId: this.test.title\n        };\n        await fn.apply(this, arguments);\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-data-model-2.0-test-suite/vc-data-model-2.0-test-suite/tests/10-vcdm2.js",
              "parent": "TQy32CushC6lFCaq2JeJG",
              "ctx": null,
              "_testId": "urn:uuid:39942da0-0552-40ae-bd65-9eb99e71f38d",
              "_events": {},
              "_eventsCount": 1,
              "cell": {
                "columnId": "apicatalog.com",
                "rowId": "The value of the id property MUST be a single URL."
              },
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 7771,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 102,
              "state": "passed",
              "speed": "slow"
            },
            {
              "type": "test",
              "title": "The value of the id property MUST be a single URL.",
              "body": "async function() {\n        this.test.cell = {\n          columnId: name,\n          rowId: this.test.title\n        };\n        await fn.apply(this, arguments);\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-data-model-2.0-test-suite/vc-data-model-2.0-test-suite/tests/10-vcdm2.js",
              "parent": "TI6RL-BkWh9W_duZU9IqH",
              "ctx": null,
              "_testId": "urn:uuid:3038137b-595c-406a-8b97-6d004eb911a0",
              "_events": {},
              "_eventsCount": 1,
              "cell": {
                "columnId": "Digital Bazaar",
                "rowId": "The value of the id property MUST be a single URL."
              },
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 19257,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 53,
              "state": "passed",
              "speed": "medium"
            }
          ]
        },
        {
          "id": "Verifiable credentials and verifiable presentations MUST have a type property.",
          "cells": [
            {
              "type": "test",
              "title": "Verifiable credentials and verifiable presentations MUST have a type property.",
              "body": "async function() {\n        this.test.cell = {\n          columnId: name,\n          rowId: this.test.title\n        };\n        await fn.apply(this, arguments);\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-data-model-2.0-test-suite/vc-data-model-2.0-test-suite/tests/10-vcdm2.js",
              "parent": "TQy32CushC6lFCaq2JeJG",
              "ctx": null,
              "_testId": "urn:uuid:2d4c013b-0674-4a57-ac9c-8e163ecd0ebd",
              "_events": {},
              "_eventsCount": 1,
              "cell": {
                "columnId": "apicatalog.com",
                "rowId": "Verifiable credentials and verifiable presentations MUST have a type property."
              },
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 7875,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 200,
              "state": "passed",
              "speed": "slow"
            },
            {
              "type": "test",
              "title": "Verifiable credentials and verifiable presentations MUST have a type property.",
              "body": "async function() {\n        this.test.cell = {\n          columnId: name,\n          rowId: this.test.title\n        };\n        await fn.apply(this, arguments);\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-data-model-2.0-test-suite/vc-data-model-2.0-test-suite/tests/10-vcdm2.js",
              "parent": "TI6RL-BkWh9W_duZU9IqH",
              "ctx": null,
              "_testId": "urn:uuid:b1c27213-fc5d-43e7-97ef-510181e8bbc3",
              "_events": {},
              "_eventsCount": 1,
              "cell": {
                "columnId": "Digital Bazaar",
                "rowId": "Verifiable credentials and verifiable presentations MUST have a type property."
              },
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 19310,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 624,
              "state": "passed",
              "speed": "slow"
            }
          ]
        },
        {
          "id": "The value of the type property MUST be, or map to (through interpretation of the @context property), one or more URLs.",
          "cells": [
            {
              "type": "test",
              "title": "The value of the type property MUST be, or map to (through interpretation of the @context property), one or more URLs.",
              "body": "async function() {\n        this.test.cell = {\n          columnId: name,\n          rowId: this.test.title\n        };\n        await fn.apply(this, arguments);\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-data-model-2.0-test-suite/vc-data-model-2.0-test-suite/tests/10-vcdm2.js",
              "parent": "TQy32CushC6lFCaq2JeJG",
              "ctx": null,
              "_testId": "urn:uuid:27a993a5-405a-4dc6-ace5-3ebe3fcabf42",
              "_events": {},
              "_eventsCount": 1,
              "cell": {
                "columnId": "apicatalog.com",
                "rowId": "The value of the type property MUST be, or map to (through interpretation of the @context property), one or more URLs."
              },
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 8075,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 998,
              "state": "failed",
              "err": {
                "generatedMessage": false,
                "code": "ERR_ASSERTION",
                "operator": "rejects"
              }
            },
            {
              "type": "test",
              "title": "The value of the type property MUST be, or map to (through interpretation of the @context property), one or more URLs.",
              "body": "async function() {\n        this.test.cell = {\n          columnId: name,\n          rowId: this.test.title\n        };\n        await fn.apply(this, arguments);\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-data-model-2.0-test-suite/vc-data-model-2.0-test-suite/tests/10-vcdm2.js",
              "parent": "TI6RL-BkWh9W_duZU9IqH",
              "ctx": null,
              "_testId": "urn:uuid:2fdf027d-458d-46a2-9728-26d1a0a3ed6c",
              "_events": {},
              "_eventsCount": 1,
              "cell": {
                "columnId": "Digital Bazaar",
                "rowId": "The value of the type property MUST be, or map to (through interpretation of the @context property), one or more URLs."
              },
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 19935,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 241,
              "state": "passed",
              "speed": "slow"
            }
          ]
        },
        {
          "id": "list: \"objects that MUST have a type specified.\"",
          "cells": [
            {
              "type": "test",
              "title": "list: \"objects that MUST have a type specified.\"",
              "body": "async function() {\n        this.test.cell = {\n          columnId: name,\n          rowId: this.test.title\n        };\n        await fn.apply(this, arguments);\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-data-model-2.0-test-suite/vc-data-model-2.0-test-suite/tests/10-vcdm2.js",
              "parent": "TQy32CushC6lFCaq2JeJG",
              "ctx": null,
              "_testId": "urn:uuid:5bdbe82d-42db-4e15-8899-fd6c0e9209f1",
              "_events": {},
              "_eventsCount": 1,
              "cell": {
                "columnId": "apicatalog.com",
                "rowId": "list: \"objects that MUST have a type specified.\""
              },
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 9075,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 1347,
              "state": "failed",
              "err": {
                "response": {},
                "request": {},
                "options": {
                  "credentials": "same-origin",
                  "headers": {},
                  "body": "{\"credential\":{\"@context\":[\"https://www.w3.org/ns/credentials/v2\",{\"CredentialStatusList2017\":\"https://example.org/examples#CredentialStatusList2017\"}],\"type\":[\"VerifiableCredential\"],\"validFrom\":\"2023-02-25T14:23:56Z\",\"issuer\":\"did:example:issuer\",\"credentialSubject\":{\"id\":\"did:example:subject\"},\"credentialStatus\":{\"id\":\"did:example:status\",\"type\":\"CredentialStatusList2017\"}},\"options\":{\"type\":\"Ed25519Signature2020\"}}",
                  "method": "POST",
                  "json": {
                    "credential": {
                      "@context": [
                        "https://www.w3.org/ns/credentials/v2",
                        {
                          "CredentialStatusList2017": "https://example.org/examples#CredentialStatusList2017"
                        }
                      ],
                      "type": [
                        "VerifiableCredential"
                      ],
                      "validFrom": "2023-02-25T14:23:56Z",
                      "issuer": "did:example:issuer",
                      "credentialSubject": {
                        "id": "did:example:subject"
                      },
                      "credentialStatus": {
                        "id": "did:example:status",
                        "type": "CredentialStatusList2017"
                      }
                    },
                    "options": {
                      "type": "Ed25519Signature2020"
                    }
                  },
                  "agent": {
                    "_events": {},
                    "_eventsCount": 2,
                    "defaultPort": 443,
                    "protocol": "https:",
                    "options": {
                      "rejectUnauthorized": false,
                      "noDelay": true,
                      "path": null
                    },
                    "requests": {},
                    "sockets": {},
                    "freeSockets": {},
                    "keepAliveMsecs": 1000,
                    "keepAlive": false,
                    "maxSockets": null,
                    "maxFreeSockets": 256,
                    "scheduling": "lifo",
                    "maxTotalSockets": null,
                    "totalSocketCount": 0,
                    "maxCachedSessions": 100,
                    "_sessionCache": {
                      "map": {},
                      "list": []
                    }
                  },
                  "hooks": {
                    "beforeRequest": [],
                    "beforeRetry": [],
                    "beforeError": [],
                    "afterResponse": []
                  },
                  "prefixUrl": "",
                  "retry": {
                    "limit": 2,
                    "methods": [
                      "get",
                      "put",
                      "head",
                      "delete",
                      "options",
                      "trace"
                    ],
                    "statusCodes": [
                      408,
                      413,
                      429,
                      500,
                      502,
                      503,
                      504
                    ],
                    "afterStatusCodes": [
                      413,
                      429,
                      503
                    ],
                    "maxRetryAfter": null,
                    "backoffLimit": null
                  },
                  "throwHttpErrors": true,
                  "timeout": 10000,
                  "signal": {},
                  "duplex": "half"
                },
                "name": "HTTPError",
                "requestUrl": "https://vc.apicatalog.com/credentials/issue",
                "status": 400,
                "data": {
                  "id": "MALFORMED",
                  "code": "MISSING_CREDENTIAL_STATUS_TYPE",
                  "message": null
                }
              }
            },
            {
              "type": "test",
              "title": "list: \"objects that MUST have a type specified.\"",
              "body": "async function() {\n        this.test.cell = {\n          columnId: name,\n          rowId: this.test.title\n        };\n        await fn.apply(this, arguments);\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-data-model-2.0-test-suite/vc-data-model-2.0-test-suite/tests/10-vcdm2.js",
              "parent": "TI6RL-BkWh9W_duZU9IqH",
              "ctx": null,
              "_testId": "urn:uuid:3c24241d-a970-4fab-9135-5dc4b8b71d14",
              "_events": {},
              "_eventsCount": 1,
              "cell": {
                "columnId": "Digital Bazaar",
                "rowId": "list: \"objects that MUST have a type specified.\""
              },
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 20176,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 670,
              "state": "passed",
              "speed": "slow"
            }
          ]
        },
        {
          "id": "A verifiable credential MUST have a credentialSubject property.",
          "cells": [
            {
              "type": "test",
              "title": "A verifiable credential MUST have a credentialSubject property.",
              "body": "async function() {\n        this.test.cell = {\n          columnId: name,\n          rowId: this.test.title\n        };\n        await fn.apply(this, arguments);\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-data-model-2.0-test-suite/vc-data-model-2.0-test-suite/tests/10-vcdm2.js",
              "parent": "TQy32CushC6lFCaq2JeJG",
              "ctx": null,
              "_testId": "urn:uuid:2d33df1b-6fcf-463b-b47d-f45c9848dcdc",
              "_events": {},
              "_eventsCount": 1,
              "cell": {
                "columnId": "apicatalog.com",
                "rowId": "A verifiable credential MUST have a credentialSubject property."
              },
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 10425,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 51,
              "state": "passed",
              "speed": "medium"
            },
            {
              "type": "test",
              "title": "A verifiable credential MUST have a credentialSubject property.",
              "body": "async function() {\n        this.test.cell = {\n          columnId: name,\n          rowId: this.test.title\n        };\n        await fn.apply(this, arguments);\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-data-model-2.0-test-suite/vc-data-model-2.0-test-suite/tests/10-vcdm2.js",
              "parent": "TI6RL-BkWh9W_duZU9IqH",
              "ctx": null,
              "_testId": "urn:uuid:61d80cc1-82bf-4e77-950f-629f5866eac4",
              "_events": {},
              "_eventsCount": 1,
              "cell": {
                "columnId": "Digital Bazaar",
                "rowId": "A verifiable credential MUST have a credentialSubject property."
              },
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 20846,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 41,
              "state": "passed",
              "speed": "medium"
            }
          ]
        },
        {
          "id": "The value of the credentialSubject property is defined as a set of objects that MUST contain one or more claims that are each related to a subject of the verifiable credential.",
          "cells": [
            {
              "type": "test",
              "title": "The value of the credentialSubject property is defined as a set of objects that MUST contain one or more claims that are each related to a subject of the verifiable credential.",
              "body": "async function() {\n        this.test.cell = {\n          columnId: name,\n          rowId: this.test.title\n        };\n        await fn.apply(this, arguments);\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-data-model-2.0-test-suite/vc-data-model-2.0-test-suite/tests/10-vcdm2.js",
              "parent": "TQy32CushC6lFCaq2JeJG",
              "ctx": null,
              "_testId": "urn:uuid:a1526543-7381-4298-9808-398c1b250e8b",
              "_events": {},
              "_eventsCount": 1,
              "cell": {
                "columnId": "apicatalog.com",
                "rowId": "The value of the credentialSubject property is defined as a set of objects that MUST contain one or more claims that are each related to a subject of the verifiable credential."
              },
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 10476,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 105,
              "state": "failed",
              "err": {
                "generatedMessage": false,
                "code": "ERR_ASSERTION",
                "operator": "rejects"
              }
            },
            {
              "type": "test",
              "title": "The value of the credentialSubject property is defined as a set of objects that MUST contain one or more claims that are each related to a subject of the verifiable credential.",
              "body": "async function() {\n        this.test.cell = {\n          columnId: name,\n          rowId: this.test.title\n        };\n        await fn.apply(this, arguments);\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-data-model-2.0-test-suite/vc-data-model-2.0-test-suite/tests/10-vcdm2.js",
              "parent": "TI6RL-BkWh9W_duZU9IqH",
              "ctx": null,
              "_testId": "urn:uuid:5aba5098-8195-4147-b3d2-cbe1f2cbd92b",
              "_events": {},
              "_eventsCount": 1,
              "cell": {
                "columnId": "Digital Bazaar",
                "rowId": "The value of the credentialSubject property is defined as a set of objects that MUST contain one or more claims that are each related to a subject of the verifiable credential."
              },
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 20887,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 152,
              "state": "passed",
              "speed": "slow"
            }
          ]
        },
        {
          "id": "A verifiable credential MUST have an issuer property.",
          "cells": [
            {
              "type": "test",
              "title": "A verifiable credential MUST have an issuer property.",
              "body": "async function() {\n        this.test.cell = {\n          columnId: name,\n          rowId: this.test.title\n        };\n        await fn.apply(this, arguments);\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-data-model-2.0-test-suite/vc-data-model-2.0-test-suite/tests/10-vcdm2.js",
              "parent": "TQy32CushC6lFCaq2JeJG",
              "ctx": null,
              "_testId": "urn:uuid:25030a3f-a970-4aac-8cd5-e5cf3bb788e1",
              "_events": {},
              "_eventsCount": 1,
              "cell": {
                "columnId": "apicatalog.com",
                "rowId": "A verifiable credential MUST have an issuer property."
              },
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 10581,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 197,
              "state": "failed",
              "err": {
                "generatedMessage": false,
                "code": "ERR_ASSERTION",
                "operator": "rejects"
              }
            },
            {
              "type": "test",
              "title": "A verifiable credential MUST have an issuer property.",
              "body": "async function() {\n        this.test.cell = {\n          columnId: name,\n          rowId: this.test.title\n        };\n        await fn.apply(this, arguments);\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-data-model-2.0-test-suite/vc-data-model-2.0-test-suite/tests/10-vcdm2.js",
              "parent": "TI6RL-BkWh9W_duZU9IqH",
              "ctx": null,
              "_testId": "urn:uuid:081dc03d-8336-4e55-94f9-8fb3fd6e1061",
              "_events": {},
              "_eventsCount": 1,
              "cell": {
                "columnId": "Digital Bazaar",
                "rowId": "A verifiable credential MUST have an issuer property."
              },
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 21039,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 38,
              "state": "passed",
              "speed": "medium"
            }
          ]
        },
        {
          "id": "The value of the issuer property MUST be either a URL or an object containing an id property.",
          "cells": [
            {
              "type": "test",
              "title": "The value of the issuer property MUST be either a URL or an object containing an id property.",
              "body": "async function() {\n        this.test.cell = {\n          columnId: name,\n          rowId: this.test.title\n        };\n        await fn.apply(this, arguments);\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-data-model-2.0-test-suite/vc-data-model-2.0-test-suite/tests/10-vcdm2.js",
              "parent": "TQy32CushC6lFCaq2JeJG",
              "ctx": null,
              "_testId": "urn:uuid:d81098ba-3bde-4518-a3f7-fb4f95189b1d",
              "_events": {},
              "_eventsCount": 1,
              "cell": {
                "columnId": "apicatalog.com",
                "rowId": "The value of the issuer property MUST be either a URL or an object containing an id property."
              },
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 10778,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 490,
              "state": "passed",
              "speed": "slow"
            },
            {
              "type": "test",
              "title": "The value of the issuer property MUST be either a URL or an object containing an id property.",
              "body": "async function() {\n        this.test.cell = {\n          columnId: name,\n          rowId: this.test.title\n        };\n        await fn.apply(this, arguments);\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-data-model-2.0-test-suite/vc-data-model-2.0-test-suite/tests/10-vcdm2.js",
              "parent": "TI6RL-BkWh9W_duZU9IqH",
              "ctx": null,
              "_testId": "urn:uuid:fcf59f6a-4e39-43d9-b01f-c215b2fcd299",
              "_events": {},
              "_eventsCount": 1,
              "cell": {
                "columnId": "Digital Bazaar",
                "rowId": "The value of the issuer property MUST be either a URL or an object containing an id property."
              },
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 21077,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 73,
              "state": "failed",
              "err": {
                "generatedMessage": false,
                "code": "ERR_ASSERTION",
                "operator": "rejects"
              }
            }
          ]
        },
        {
          "id": "If present, the value of the validFrom property MUST be an [XMLSCHEMA11-2] dateTimeStamp string value representing the date and time the credential becomes valid, which could be a date and time in the future.",
          "cells": [
            {
              "type": "test",
              "title": "If present, the value of the validFrom property MUST be an [XMLSCHEMA11-2] dateTimeStamp string value representing the date and time the credential becomes valid, which could be a date and time in the future.",
              "body": "async function() {\n        this.test.cell = {\n          columnId: name,\n          rowId: this.test.title\n        };\n        await fn.apply(this, arguments);\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-data-model-2.0-test-suite/vc-data-model-2.0-test-suite/tests/10-vcdm2.js",
              "parent": "TQy32CushC6lFCaq2JeJG",
              "ctx": null,
              "_testId": "urn:uuid:5f3319ab-27b3-46ab-a024-f0bf2467f52e",
              "_events": {},
              "_eventsCount": 1,
              "cell": {
                "columnId": "apicatalog.com",
                "rowId": "If present, the value of the validFrom property MUST be an [XMLSCHEMA11-2] dateTimeStamp string value representing the date and time the credential becomes valid, which could be a date and time in the future."
              },
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 11268,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 803,
              "state": "passed",
              "speed": "slow"
            },
            {
              "type": "test",
              "title": "If present, the value of the validFrom property MUST be an [XMLSCHEMA11-2] dateTimeStamp string value representing the date and time the credential becomes valid, which could be a date and time in the future.",
              "body": "async function() {\n        this.test.cell = {\n          columnId: name,\n          rowId: this.test.title\n        };\n        await fn.apply(this, arguments);\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-data-model-2.0-test-suite/vc-data-model-2.0-test-suite/tests/10-vcdm2.js",
              "parent": "TI6RL-BkWh9W_duZU9IqH",
              "ctx": null,
              "_testId": "urn:uuid:f34e4308-4300-48a7-80a2-fd4d3c13f3e0",
              "_events": {},
              "_eventsCount": 1,
              "cell": {
                "columnId": "Digital Bazaar",
                "rowId": "If present, the value of the validFrom property MUST be an [XMLSCHEMA11-2] dateTimeStamp string value representing the date and time the credential becomes valid, which could be a date and time in the future."
              },
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 21151,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 226,
              "state": "failed",
              "err": {
                "generatedMessage": false,
                "code": "ERR_ASSERTION",
                "operator": "rejects"
              }
            }
          ]
        },
        {
          "id": "If present, the value of the validUntil property MUST be a string value of an [XMLSCHEMA11-2] combined date-time string representing the date and time the credential ceases to be valid, which could be a date and time in the past.",
          "cells": [
            {
              "type": "test",
              "title": "If present, the value of the validUntil property MUST be a string value of an [XMLSCHEMA11-2] combined date-time string representing the date and time the credential ceases to be valid, which could be a date and time in the past.",
              "body": "async function() {\n        this.test.cell = {\n          columnId: name,\n          rowId: this.test.title\n        };\n        await fn.apply(this, arguments);\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-data-model-2.0-test-suite/vc-data-model-2.0-test-suite/tests/10-vcdm2.js",
              "parent": "TQy32CushC6lFCaq2JeJG",
              "ctx": null,
              "_testId": "urn:uuid:0c385399-5cba-4c73-9dfd-e6526ef1344e",
              "_events": {},
              "_eventsCount": 1,
              "cell": {
                "columnId": "apicatalog.com",
                "rowId": "If present, the value of the validUntil property MUST be a string value of an [XMLSCHEMA11-2] combined date-time string representing the date and time the credential ceases to be valid, which could be a date and time in the past."
              },
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 12071,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 202,
              "state": "failed",
              "err": {
                "response": {},
                "request": {},
                "options": {
                  "credentials": "same-origin",
                  "headers": {},
                  "body": "{\"credential\":{\"@context\":[\"https://www.w3.org/ns/credentials/v2\"],\"type\":[\"VerifiableCredential\"],\"issuer\":\"did:example:issuer\",\"validFrom\":\"2023-02-26T01:19:19Z\",\"validUntil\":\"2023-02-26T01:19:20Z\",\"credentialSubject\":{\"id\":\"did:example:subject\"}},\"options\":{\"type\":\"Ed25519Signature2020\"}}",
                  "method": "POST",
                  "json": {
                    "credential": {
                      "@context": [
                        "https://www.w3.org/ns/credentials/v2"
                      ],
                      "type": [
                        "VerifiableCredential"
                      ],
                      "issuer": "did:example:issuer",
                      "validFrom": "2023-02-26T01:19:19Z",
                      "validUntil": "2023-02-26T01:19:20Z",
                      "credentialSubject": {
                        "id": "did:example:subject"
                      }
                    },
                    "options": {
                      "type": "Ed25519Signature2020"
                    }
                  },
                  "agent": {
                    "_events": {},
                    "_eventsCount": 2,
                    "defaultPort": 443,
                    "protocol": "https:",
                    "options": {
                      "rejectUnauthorized": false,
                      "noDelay": true,
                      "path": null
                    },
                    "requests": {},
                    "sockets": {},
                    "freeSockets": {},
                    "keepAliveMsecs": 1000,
                    "keepAlive": false,
                    "maxSockets": null,
                    "maxFreeSockets": 256,
                    "scheduling": "lifo",
                    "maxTotalSockets": null,
                    "totalSocketCount": 0,
                    "maxCachedSessions": 100,
                    "_sessionCache": {
                      "map": {},
                      "list": []
                    }
                  },
                  "hooks": {
                    "beforeRequest": [],
                    "beforeRetry": [],
                    "beforeError": [],
                    "afterResponse": []
                  },
                  "prefixUrl": "",
                  "retry": {
                    "limit": 2,
                    "methods": [
                      "get",
                      "put",
                      "head",
                      "delete",
                      "options",
                      "trace"
                    ],
                    "statusCodes": [
                      408,
                      413,
                      429,
                      500,
                      502,
                      503,
                      504
                    ],
                    "afterStatusCodes": [
                      413,
                      429,
                      503
                    ],
                    "maxRetryAfter": null,
                    "backoffLimit": null
                  },
                  "throwHttpErrors": true,
                  "timeout": 10000,
                  "signal": {},
                  "duplex": "half"
                },
                "name": "HTTPError",
                "requestUrl": "https://vc.apicatalog.com/credentials/issue",
                "status": 400,
                "data": {
                  "id": "EXPIRED",
                  "message": "Expired"
                }
              }
            },
            {
              "type": "test",
              "title": "If present, the value of the validUntil property MUST be a string value of an [XMLSCHEMA11-2] combined date-time string representing the date and time the credential ceases to be valid, which could be a date and time in the past.",
              "body": "async function() {\n        this.test.cell = {\n          columnId: name,\n          rowId: this.test.title\n        };\n        await fn.apply(this, arguments);\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-data-model-2.0-test-suite/vc-data-model-2.0-test-suite/tests/10-vcdm2.js",
              "parent": "TI6RL-BkWh9W_duZU9IqH",
              "ctx": null,
              "_testId": "urn:uuid:ee415e9c-a687-4ec1-9318-8c8cea3a4037",
              "_events": {},
              "_eventsCount": 1,
              "cell": {
                "columnId": "Digital Bazaar",
                "rowId": "If present, the value of the validUntil property MUST be a string value of an [XMLSCHEMA11-2] combined date-time string representing the date and time the credential ceases to be valid, which could be a date and time in the past."
              },
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 21377,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 287,
              "state": "failed",
              "err": {
                "generatedMessage": false,
                "code": "ERR_ASSERTION",
                "operator": "rejects"
              }
            }
          ]
        },
        {
          "id": "If present, the value of the credentialStatus property MUST include id and type",
          "cells": [
            {
              "type": "test",
              "title": "If present, the value of the credentialStatus property MUST include id and type",
              "body": "async function() {\n        this.test.cell = {\n          columnId: name,\n          rowId: this.test.title\n        };\n        await fn.apply(this, arguments);\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-data-model-2.0-test-suite/vc-data-model-2.0-test-suite/tests/10-vcdm2.js",
              "parent": "TQy32CushC6lFCaq2JeJG",
              "ctx": null,
              "_testId": "urn:uuid:95999518-2672-4801-8354-46836e95da5f",
              "_events": {},
              "_eventsCount": 1,
              "cell": {
                "columnId": "apicatalog.com",
                "rowId": "If present, the value of the credentialStatus property MUST include id and type"
              },
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 12274,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 101,
              "state": "passed",
              "speed": "slow"
            },
            {
              "type": "test",
              "title": "If present, the value of the credentialStatus property MUST include id and type",
              "body": "async function() {\n        this.test.cell = {\n          columnId: name,\n          rowId: this.test.title\n        };\n        await fn.apply(this, arguments);\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-data-model-2.0-test-suite/vc-data-model-2.0-test-suite/tests/10-vcdm2.js",
              "parent": "TI6RL-BkWh9W_duZU9IqH",
              "ctx": null,
              "_testId": "urn:uuid:44bbc8f1-6bf8-48dc-b2f7-4798e8743a79",
              "_events": {},
              "_eventsCount": 1,
              "cell": {
                "columnId": "Digital Bazaar",
                "rowId": "If present, the value of the credentialStatus property MUST include id and type"
              },
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 21665,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 36,
              "state": "passed",
              "speed": "fast"
            }
          ]
        },
        {
          "id": "credentialStatus id property MUST be a URL which MAY be dereferenced.",
          "cells": [
            {
              "type": "test",
              "title": "credentialStatus id property MUST be a URL which MAY be dereferenced.",
              "body": "async function() {\n        this.test.cell = {\n          columnId: name,\n          rowId: this.test.title\n        };\n        await fn.apply(this, arguments);\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-data-model-2.0-test-suite/vc-data-model-2.0-test-suite/tests/10-vcdm2.js",
              "parent": "TQy32CushC6lFCaq2JeJG",
              "ctx": null,
              "_testId": "urn:uuid:6bb290f6-82f7-4671-a1f7-444e121310c4",
              "_events": {},
              "_eventsCount": 1,
              "cell": {
                "columnId": "apicatalog.com",
                "rowId": "credentialStatus id property MUST be a URL which MAY be dereferenced."
              },
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 12376,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 98,
              "state": "passed",
              "speed": "slow"
            },
            {
              "type": "test",
              "title": "credentialStatus id property MUST be a URL which MAY be dereferenced.",
              "body": "async function() {\n        this.test.cell = {\n          columnId: name,\n          rowId: this.test.title\n        };\n        await fn.apply(this, arguments);\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-data-model-2.0-test-suite/vc-data-model-2.0-test-suite/tests/10-vcdm2.js",
              "parent": "TI6RL-BkWh9W_duZU9IqH",
              "ctx": null,
              "_testId": "urn:uuid:28568f61-9936-4efb-a502-33fe8a433370",
              "_events": {},
              "_eventsCount": 1,
              "cell": {
                "columnId": "Digital Bazaar",
                "rowId": "credentialStatus id property MUST be a URL which MAY be dereferenced."
              },
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 21701,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 42,
              "state": "passed",
              "speed": "medium"
            }
          ]
        },
        {
          "id": "The verifiableCredential property MAY be present. The value MUST be an array of one or more verifiable credentials, or of data derived from verifiable credentials in a cryptographically verifiable format.",
          "cells": [
            {
              "type": "test",
              "title": "The verifiableCredential property MAY be present. The value MUST be an array of one or more verifiable credentials, or of data derived from verifiable credentials in a cryptographically verifiable format.",
              "body": "async function() {\n        this.test.cell = {\n          columnId: name,\n          rowId: this.test.title\n        };\n        await fn.apply(this, arguments);\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-data-model-2.0-test-suite/vc-data-model-2.0-test-suite/tests/10-vcdm2.js",
              "parent": "TQy32CushC6lFCaq2JeJG",
              "ctx": null,
              "_testId": "urn:uuid:6d851d3f-8510-4634-8665-8475868d1ef1",
              "_events": {},
              "_eventsCount": 1,
              "cell": {
                "columnId": "apicatalog.com",
                "rowId": "The verifiableCredential property MAY be present. The value MUST be an array of one or more verifiable credentials, or of data derived from verifiable credentials in a cryptographically verifiable format."
              },
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 12475,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 902,
              "state": "passed",
              "speed": "slow"
            },
            {
              "type": "test",
              "title": "The verifiableCredential property MAY be present. The value MUST be an array of one or more verifiable credentials, or of data derived from verifiable credentials in a cryptographically verifiable format.",
              "body": "async function() {\n        this.test.cell = {\n          columnId: name,\n          rowId: this.test.title\n        };\n        await fn.apply(this, arguments);\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-data-model-2.0-test-suite/vc-data-model-2.0-test-suite/tests/10-vcdm2.js",
              "parent": "TI6RL-BkWh9W_duZU9IqH",
              "ctx": null,
              "_testId": "urn:uuid:d34e57f4-d9b0-42ec-b1f8-6d57eede7c46",
              "_events": {},
              "_eventsCount": 1,
              "cell": {
                "columnId": "Digital Bazaar",
                "rowId": "The verifiableCredential property MAY be present. The value MUST be an array of one or more verifiable credentials, or of data derived from verifiable credentials in a cryptographically verifiable format."
              },
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 21743,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 239,
              "state": "passed",
              "speed": "slow"
            }
          ]
        },
        {
          "id": "JSON-LD-based processors MUST produce an error when a JSON-LD context redefines any term in the active context.",
          "cells": [
            {
              "type": "test",
              "title": "JSON-LD-based processors MUST produce an error when a JSON-LD context redefines any term in the active context.",
              "body": "async function() {\n        this.test.cell = {\n          columnId: name,\n          rowId: this.test.title\n        };\n        await fn.apply(this, arguments);\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-data-model-2.0-test-suite/vc-data-model-2.0-test-suite/tests/10-vcdm2.js",
              "parent": "TQy32CushC6lFCaq2JeJG",
              "ctx": null,
              "_testId": "urn:uuid:646e0b52-622a-4ab6-bf1f-86c9ccdbc31e",
              "_events": {},
              "_eventsCount": 1,
              "cell": {
                "columnId": "apicatalog.com",
                "rowId": "JSON-LD-based processors MUST produce an error when a JSON-LD context redefines any term in the active context."
              },
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 13377,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 199,
              "state": "passed",
              "speed": "slow"
            },
            {
              "type": "test",
              "title": "JSON-LD-based processors MUST produce an error when a JSON-LD context redefines any term in the active context.",
              "body": "async function() {\n        this.test.cell = {\n          columnId: name,\n          rowId: this.test.title\n        };\n        await fn.apply(this, arguments);\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-data-model-2.0-test-suite/vc-data-model-2.0-test-suite/tests/10-vcdm2.js",
              "parent": "TI6RL-BkWh9W_duZU9IqH",
              "ctx": null,
              "_testId": "urn:uuid:c5433c92-60c4-483c-a137-b48ab56e37f3",
              "_events": {},
              "_eventsCount": 1,
              "cell": {
                "columnId": "Digital Bazaar",
                "rowId": "JSON-LD-based processors MUST produce an error when a JSON-LD context redefines any term in the active context."
              },
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 21982,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 99,
              "state": "passed",
              "speed": "slow"
            }
          ]
        },
        {
          "id": "The value of the credentialSchema property MUST be one or more data schemas that provide verifiers with enough information to determine if the provided data conforms to the provided schema.",
          "cells": [
            {
              "type": "test",
              "title": "The value of the credentialSchema property MUST be one or more data schemas that provide verifiers with enough information to determine if the provided data conforms to the provided schema.",
              "body": "async function() {\n        this.test.cell = {\n          columnId: name,\n          rowId: this.test.title\n        };\n        await fn.apply(this, arguments);\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-data-model-2.0-test-suite/vc-data-model-2.0-test-suite/tests/10-vcdm2.js",
              "parent": "TQy32CushC6lFCaq2JeJG",
              "ctx": null,
              "_testId": "urn:uuid:70d23756-44ab-42b0-877c-fa6420345e0b",
              "_events": {},
              "_eventsCount": 1,
              "cell": {
                "columnId": "apicatalog.com",
                "rowId": "The value of the credentialSchema property MUST be one or more data schemas that provide verifiers with enough information to determine if the provided data conforms to the provided schema."
              },
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 13576,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 206,
              "state": "passed",
              "speed": "slow"
            },
            {
              "type": "test",
              "title": "The value of the credentialSchema property MUST be one or more data schemas that provide verifiers with enough information to determine if the provided data conforms to the provided schema.",
              "body": "async function() {\n        this.test.cell = {\n          columnId: name,\n          rowId: this.test.title\n        };\n        await fn.apply(this, arguments);\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-data-model-2.0-test-suite/vc-data-model-2.0-test-suite/tests/10-vcdm2.js",
              "parent": "TI6RL-BkWh9W_duZU9IqH",
              "ctx": null,
              "_testId": "urn:uuid:9e8765fa-99a2-4f5d-837a-efc91f04f85e",
              "_events": {},
              "_eventsCount": 1,
              "cell": {
                "columnId": "Digital Bazaar",
                "rowId": "The value of the credentialSchema property MUST be one or more data schemas that provide verifiers with enough information to determine if the provided data conforms to the provided schema."
              },
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 22081,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 138,
              "state": "passed",
              "speed": "slow"
            }
          ]
        },
        {
          "id": "Each credentialSchema MUST specify its type (for example, JsonSchemaValidator2018), and an id property",
          "cells": [
            {
              "type": "test",
              "title": "Each credentialSchema MUST specify its type (for example, JsonSchemaValidator2018), and an id property",
              "body": "async function() {\n        this.test.cell = {\n          columnId: name,\n          rowId: this.test.title\n        };\n        await fn.apply(this, arguments);\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-data-model-2.0-test-suite/vc-data-model-2.0-test-suite/tests/10-vcdm2.js",
              "parent": "TQy32CushC6lFCaq2JeJG",
              "ctx": null,
              "_testId": "urn:uuid:89e42ddc-818c-4048-a7ca-46370115a263",
              "_events": {},
              "_eventsCount": 1,
              "cell": {
                "columnId": "apicatalog.com",
                "rowId": "Each credentialSchema MUST specify its type (for example, JsonSchemaValidator2018), and an id property"
              },
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 13782,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 193,
              "state": "failed",
              "err": {
                "generatedMessage": false,
                "code": "ERR_ASSERTION",
                "operator": "rejects"
              }
            },
            {
              "type": "test",
              "title": "Each credentialSchema MUST specify its type (for example, JsonSchemaValidator2018), and an id property",
              "body": "async function() {\n        this.test.cell = {\n          columnId: name,\n          rowId: this.test.title\n        };\n        await fn.apply(this, arguments);\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-data-model-2.0-test-suite/vc-data-model-2.0-test-suite/tests/10-vcdm2.js",
              "parent": "TI6RL-BkWh9W_duZU9IqH",
              "ctx": null,
              "_testId": "urn:uuid:8cb3df45-209d-44dd-bcfe-63293e8e62ac",
              "_events": {},
              "_eventsCount": 1,
              "cell": {
                "columnId": "Digital Bazaar",
                "rowId": "Each credentialSchema MUST specify its type (for example, JsonSchemaValidator2018), and an id property"
              },
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 22219,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 62,
              "state": "failed",
              "err": {
                "generatedMessage": false,
                "code": "ERR_ASSERTION",
                "operator": "rejects"
              }
            }
          ]
        },
        {
          "id": "credentialSchema id MUST be a URL identifying the schema file.",
          "cells": [
            {
              "type": "test",
              "title": "credentialSchema id MUST be a URL identifying the schema file.",
              "body": "async function() {\n        this.test.cell = {\n          columnId: name,\n          rowId: this.test.title\n        };\n        await fn.apply(this, arguments);\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-data-model-2.0-test-suite/vc-data-model-2.0-test-suite/tests/10-vcdm2.js",
              "parent": "TQy32CushC6lFCaq2JeJG",
              "ctx": null,
              "_testId": "urn:uuid:94a5ba7b-f1a9-490f-887f-3cebd3fe0b97",
              "_events": {},
              "_eventsCount": 1,
              "cell": {
                "columnId": "apicatalog.com",
                "rowId": "credentialSchema id MUST be a URL identifying the schema file."
              },
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 13975,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 295,
              "state": "failed",
              "err": {
                "generatedMessage": false,
                "code": "ERR_ASSERTION",
                "operator": "rejects"
              }
            },
            {
              "type": "test",
              "title": "credentialSchema id MUST be a URL identifying the schema file.",
              "body": "async function() {\n        this.test.cell = {\n          columnId: name,\n          rowId: this.test.title\n        };\n        await fn.apply(this, arguments);\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-data-model-2.0-test-suite/vc-data-model-2.0-test-suite/tests/10-vcdm2.js",
              "parent": "TI6RL-BkWh9W_duZU9IqH",
              "ctx": null,
              "_testId": "urn:uuid:370c7371-cc88-4463-9f23-5c0326e37a06",
              "_events": {},
              "_eventsCount": 1,
              "cell": {
                "columnId": "Digital Bazaar",
                "rowId": "credentialSchema id MUST be a URL identifying the schema file."
              },
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 22282,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 39,
              "state": "passed",
              "speed": "medium"
            }
          ]
        },
        {
          "id": "The value of the termsOfUse property MUST specify one or more terms of use policies under which the creator issued the credential or presentation.",
          "cells": [
            {
              "type": "test",
              "title": "The value of the termsOfUse property MUST specify one or more terms of use policies under which the creator issued the credential or presentation.",
              "body": "async function() {\n        this.test.cell = {\n          columnId: name,\n          rowId: this.test.title\n        };\n        await fn.apply(this, arguments);\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-data-model-2.0-test-suite/vc-data-model-2.0-test-suite/tests/10-vcdm2.js",
              "parent": "TQy32CushC6lFCaq2JeJG",
              "ctx": null,
              "_testId": "urn:uuid:2ff661ed-b7b6-426d-b686-609562c9e417",
              "_events": {},
              "_eventsCount": 1,
              "cell": {
                "columnId": "apicatalog.com",
                "rowId": "The value of the termsOfUse property MUST specify one or more terms of use policies under which the creator issued the credential or presentation."
              },
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 14270,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 204,
              "state": "passed",
              "speed": "slow"
            },
            {
              "type": "test",
              "title": "The value of the termsOfUse property MUST specify one or more terms of use policies under which the creator issued the credential or presentation.",
              "body": "async function() {\n        this.test.cell = {\n          columnId: name,\n          rowId: this.test.title\n        };\n        await fn.apply(this, arguments);\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-data-model-2.0-test-suite/vc-data-model-2.0-test-suite/tests/10-vcdm2.js",
              "parent": "TI6RL-BkWh9W_duZU9IqH",
              "ctx": null,
              "_testId": "urn:uuid:f9792984-bf07-4371-aa0c-ef30e2a8c346",
              "_events": {},
              "_eventsCount": 1,
              "cell": {
                "columnId": "Digital Bazaar",
                "rowId": "The value of the termsOfUse property MUST specify one or more terms of use policies under which the creator issued the credential or presentation."
              },
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 22321,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 62,
              "state": "passed",
              "speed": "medium"
            }
          ]
        },
        {
          "id": "Each termsOfUse value MUST specify its type, for example, IssuerPolicy, and MAY specify its instance id.",
          "cells": [
            {
              "type": "test",
              "title": "Each termsOfUse value MUST specify its type, for example, IssuerPolicy, and MAY specify its instance id.",
              "body": "async function() {\n        this.test.cell = {\n          columnId: name,\n          rowId: this.test.title\n        };\n        await fn.apply(this, arguments);\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-data-model-2.0-test-suite/vc-data-model-2.0-test-suite/tests/10-vcdm2.js",
              "parent": "TQy32CushC6lFCaq2JeJG",
              "ctx": null,
              "_testId": "urn:uuid:23bbd7ee-182c-4a47-92bb-e9865496f43d",
              "_events": {},
              "_eventsCount": 1,
              "cell": {
                "columnId": "apicatalog.com",
                "rowId": "Each termsOfUse value MUST specify its type, for example, IssuerPolicy, and MAY specify its instance id."
              },
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 14474,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 196,
              "state": "failed",
              "err": {
                "generatedMessage": false,
                "code": "ERR_ASSERTION",
                "operator": "rejects"
              }
            },
            {
              "type": "test",
              "title": "Each termsOfUse value MUST specify its type, for example, IssuerPolicy, and MAY specify its instance id.",
              "body": "async function() {\n        this.test.cell = {\n          columnId: name,\n          rowId: this.test.title\n        };\n        await fn.apply(this, arguments);\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-data-model-2.0-test-suite/vc-data-model-2.0-test-suite/tests/10-vcdm2.js",
              "parent": "TI6RL-BkWh9W_duZU9IqH",
              "ctx": null,
              "_testId": "urn:uuid:fd48a0ac-e148-47c5-bc1f-244e38d8bac0",
              "_events": {},
              "_eventsCount": 1,
              "cell": {
                "columnId": "Digital Bazaar",
                "rowId": "Each termsOfUse value MUST specify its type, for example, IssuerPolicy, and MAY specify its instance id."
              },
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 22382,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 170,
              "state": "passed",
              "speed": "slow"
            }
          ]
        },
        {
          "id": "The value of the evidence property MUST be one or more evidence schemes providing enough information for a verifier to determine whether the evidence gathered by the issuer meets its confidence requirements for relying on the credential.",
          "cells": [
            {
              "type": "test",
              "title": "The value of the evidence property MUST be one or more evidence schemes providing enough information for a verifier to determine whether the evidence gathered by the issuer meets its confidence requirements for relying on the credential.",
              "body": "async function() {\n        this.test.cell = {\n          columnId: name,\n          rowId: this.test.title\n        };\n        await fn.apply(this, arguments);\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-data-model-2.0-test-suite/vc-data-model-2.0-test-suite/tests/10-vcdm2.js",
              "parent": "TQy32CushC6lFCaq2JeJG",
              "ctx": null,
              "_testId": "urn:uuid:de5bf05b-cf39-4948-b830-914ac7b607c3",
              "_events": {},
              "_eventsCount": 1,
              "cell": {
                "columnId": "apicatalog.com",
                "rowId": "The value of the evidence property MUST be one or more evidence schemes providing enough information for a verifier to determine whether the evidence gathered by the issuer meets its confidence requirements for relying on the credential."
              },
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 14670,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 202,
              "state": "passed",
              "speed": "slow"
            },
            {
              "type": "test",
              "title": "The value of the evidence property MUST be one or more evidence schemes providing enough information for a verifier to determine whether the evidence gathered by the issuer meets its confidence requirements for relying on the credential.",
              "body": "async function() {\n        this.test.cell = {\n          columnId: name,\n          rowId: this.test.title\n        };\n        await fn.apply(this, arguments);\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-data-model-2.0-test-suite/vc-data-model-2.0-test-suite/tests/10-vcdm2.js",
              "parent": "TI6RL-BkWh9W_duZU9IqH",
              "ctx": null,
              "_testId": "urn:uuid:a86d473b-24df-4a4e-ba28-2877eb291c69",
              "_events": {},
              "_eventsCount": 1,
              "cell": {
                "columnId": "Digital Bazaar",
                "rowId": "The value of the evidence property MUST be one or more evidence schemes providing enough information for a verifier to determine whether the evidence gathered by the issuer meets its confidence requirements for relying on the credential."
              },
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 22553,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 67,
              "state": "passed",
              "speed": "medium"
            }
          ]
        }
      ]
    }
  ],
  "tables": [],
  "summary": [],
  "respecConfig": {
    "shortName": "vc2.0-test-suite",
    "group": "vc",
    "specStatus": "NOTE",
    "subtitle": "Verifiable Credentials Data Model v2.0 Interoperability Report",
    "github": "https://github.com/w3c/vc-data-model-2-test-suite",
    "edDraftURI": "https://w3c.github.io/vc-data-model-2-test-suite/",
    "doJsonLd": true,
    "includePermalinks": false,
    "otherLinks": [
      {
        "key": "Related Specifications",
        "data": [
          {
            "value": "The Verifiable Credentials Data Model v2.0",
            "href": "https://www.w3.org/TR/vc-data-model-2.0/"
          }
        ]
      }
    ],
    "editors": [
      {
        "name": "Charles E. Lehner",
        "url": "https://www.w3.org/wiki/User:Cel"
      },
      {
        "name": "Andrew Jones",
        "url": "https://github.com/aljones15",
        "company": "Digital Bazaar",
        "companyURL": "https://digitalbazaar.com/"
      }
    ],
    "authors": [
      {
        "name": "Charles E. Lehner",
        "url": "https://www.w3.org/wiki/User:Cel"
      },
      {
        "name": "Andrew Jones",
        "url": "https://github.com/aljones15",
        "company": "Digital Bazaar",
        "companyURL": "https://digitalbazaar.com/"
      }
    ]
  },
  "title": "VC v2.0 Interoperability Report",
  "stats": [
    "Tests passed 42/54 77%",
    "Tests failed 12/54 23%",
    "Failures 12",
    "Tests skipped 28",
    "Total tests 82"
  ]
}